{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../../node_modules/sortablejs/modular/sortable.core.esm.js","../../../SortableList.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if (typeof $$scope.dirty === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nlet stylesheet;\nlet active = 0;\nlet current_rules = {};\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    if (!current_rules[name]) {\n        if (!stylesheet) {\n            const style = element('style');\n            document.head.appendChild(style);\n            stylesheet = style.sheet;\n        }\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    node.style.animation = (node.style.animation || '')\n        .split(', ')\n        .filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    )\n        .join(', ');\n    if (name && !--active)\n        clear_rules();\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        let i = stylesheet.cssRules.length;\n        while (i--)\n            stylesheet.deleteRule(i);\n        current_rules = {};\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(children(options.target));\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.18.2' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_keys, validate_store, xlink_attr };\n","/**!\n * Sortable 1.10.2\n * @author\tRubaXa   <trash@rubaxa.org>\n * @author\towenm    <owen23355@gmail.com>\n * @license MIT\n */\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n}\n\nfunction _iterableToArray(iter) {\n  if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance\");\n}\n\nvar version = \"1.10.2\";\n\nfunction userAgent(pattern) {\n  if (typeof window !== 'undefined' && window.navigator) {\n    return !!\n    /*@__PURE__*/\n    navigator.userAgent.match(pattern);\n  }\n}\n\nvar IE11OrLess = userAgent(/(?:Trident.*rv[ :]?11\\.|msie|iemobile|Windows Phone)/i);\nvar Edge = userAgent(/Edge/i);\nvar FireFox = userAgent(/firefox/i);\nvar Safari = userAgent(/safari/i) && !userAgent(/chrome/i) && !userAgent(/android/i);\nvar IOS = userAgent(/iP(ad|od|hone)/i);\nvar ChromeForAndroid = userAgent(/chrome/i) && userAgent(/android/i);\n\nvar captureMode = {\n  capture: false,\n  passive: false\n};\n\nfunction on(el, event, fn) {\n  el.addEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction off(el, event, fn) {\n  el.removeEventListener(event, fn, !IE11OrLess && captureMode);\n}\n\nfunction matches(\n/**HTMLElement*/\nel,\n/**String*/\nselector) {\n  if (!selector) return;\n  selector[0] === '>' && (selector = selector.substring(1));\n\n  if (el) {\n    try {\n      if (el.matches) {\n        return el.matches(selector);\n      } else if (el.msMatchesSelector) {\n        return el.msMatchesSelector(selector);\n      } else if (el.webkitMatchesSelector) {\n        return el.webkitMatchesSelector(selector);\n      }\n    } catch (_) {\n      return false;\n    }\n  }\n\n  return false;\n}\n\nfunction getParentOrHost(el) {\n  return el.host && el !== document && el.host.nodeType ? el.host : el.parentNode;\n}\n\nfunction closest(\n/**HTMLElement*/\nel,\n/**String*/\nselector,\n/**HTMLElement*/\nctx, includeCTX) {\n  if (el) {\n    ctx = ctx || document;\n\n    do {\n      if (selector != null && (selector[0] === '>' ? el.parentNode === ctx && matches(el, selector) : matches(el, selector)) || includeCTX && el === ctx) {\n        return el;\n      }\n\n      if (el === ctx) break;\n      /* jshint boss:true */\n    } while (el = getParentOrHost(el));\n  }\n\n  return null;\n}\n\nvar R_SPACE = /\\s+/g;\n\nfunction toggleClass(el, name, state) {\n  if (el && name) {\n    if (el.classList) {\n      el.classList[state ? 'add' : 'remove'](name);\n    } else {\n      var className = (' ' + el.className + ' ').replace(R_SPACE, ' ').replace(' ' + name + ' ', ' ');\n      el.className = (className + (state ? ' ' + name : '')).replace(R_SPACE, ' ');\n    }\n  }\n}\n\nfunction css(el, prop, val) {\n  var style = el && el.style;\n\n  if (style) {\n    if (val === void 0) {\n      if (document.defaultView && document.defaultView.getComputedStyle) {\n        val = document.defaultView.getComputedStyle(el, '');\n      } else if (el.currentStyle) {\n        val = el.currentStyle;\n      }\n\n      return prop === void 0 ? val : val[prop];\n    } else {\n      if (!(prop in style) && prop.indexOf('webkit') === -1) {\n        prop = '-webkit-' + prop;\n      }\n\n      style[prop] = val + (typeof val === 'string' ? '' : 'px');\n    }\n  }\n}\n\nfunction matrix(el, selfOnly) {\n  var appliedTransforms = '';\n\n  if (typeof el === 'string') {\n    appliedTransforms = el;\n  } else {\n    do {\n      var transform = css(el, 'transform');\n\n      if (transform && transform !== 'none') {\n        appliedTransforms = transform + ' ' + appliedTransforms;\n      }\n      /* jshint boss:true */\n\n    } while (!selfOnly && (el = el.parentNode));\n  }\n\n  var matrixFn = window.DOMMatrix || window.WebKitCSSMatrix || window.CSSMatrix || window.MSCSSMatrix;\n  /*jshint -W056 */\n\n  return matrixFn && new matrixFn(appliedTransforms);\n}\n\nfunction find(ctx, tagName, iterator) {\n  if (ctx) {\n    var list = ctx.getElementsByTagName(tagName),\n        i = 0,\n        n = list.length;\n\n    if (iterator) {\n      for (; i < n; i++) {\n        iterator(list[i], i);\n      }\n    }\n\n    return list;\n  }\n\n  return [];\n}\n\nfunction getWindowScrollingElement() {\n  var scrollingElement = document.scrollingElement;\n\n  if (scrollingElement) {\n    return scrollingElement;\n  } else {\n    return document.documentElement;\n  }\n}\n/**\r\n * Returns the \"bounding client rect\" of given element\r\n * @param  {HTMLElement} el                       The element whose boundingClientRect is wanted\r\n * @param  {[Boolean]} relativeToContainingBlock  Whether the rect should be relative to the containing block of (including) the container\r\n * @param  {[Boolean]} relativeToNonStaticParent  Whether the rect should be relative to the relative parent of (including) the contaienr\r\n * @param  {[Boolean]} undoScale                  Whether the container's scale() should be undone\r\n * @param  {[HTMLElement]} container              The parent the element will be placed in\r\n * @return {Object}                               The boundingClientRect of el, with specified adjustments\r\n */\n\n\nfunction getRect(el, relativeToContainingBlock, relativeToNonStaticParent, undoScale, container) {\n  if (!el.getBoundingClientRect && el !== window) return;\n  var elRect, top, left, bottom, right, height, width;\n\n  if (el !== window && el !== getWindowScrollingElement()) {\n    elRect = el.getBoundingClientRect();\n    top = elRect.top;\n    left = elRect.left;\n    bottom = elRect.bottom;\n    right = elRect.right;\n    height = elRect.height;\n    width = elRect.width;\n  } else {\n    top = 0;\n    left = 0;\n    bottom = window.innerHeight;\n    right = window.innerWidth;\n    height = window.innerHeight;\n    width = window.innerWidth;\n  }\n\n  if ((relativeToContainingBlock || relativeToNonStaticParent) && el !== window) {\n    // Adjust for translate()\n    container = container || el.parentNode; // solves #1123 (see: https://stackoverflow.com/a/37953806/6088312)\n    // Not needed on <= IE11\n\n    if (!IE11OrLess) {\n      do {\n        if (container && container.getBoundingClientRect && (css(container, 'transform') !== 'none' || relativeToNonStaticParent && css(container, 'position') !== 'static')) {\n          var containerRect = container.getBoundingClientRect(); // Set relative to edges of padding box of container\n\n          top -= containerRect.top + parseInt(css(container, 'border-top-width'));\n          left -= containerRect.left + parseInt(css(container, 'border-left-width'));\n          bottom = top + elRect.height;\n          right = left + elRect.width;\n          break;\n        }\n        /* jshint boss:true */\n\n      } while (container = container.parentNode);\n    }\n  }\n\n  if (undoScale && el !== window) {\n    // Adjust for scale()\n    var elMatrix = matrix(container || el),\n        scaleX = elMatrix && elMatrix.a,\n        scaleY = elMatrix && elMatrix.d;\n\n    if (elMatrix) {\n      top /= scaleY;\n      left /= scaleX;\n      width /= scaleX;\n      height /= scaleY;\n      bottom = top + height;\n      right = left + width;\n    }\n  }\n\n  return {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    width: width,\n    height: height\n  };\n}\n/**\r\n * Checks if a side of an element is scrolled past a side of its parents\r\n * @param  {HTMLElement}  el           The element who's side being scrolled out of view is in question\r\n * @param  {String}       elSide       Side of the element in question ('top', 'left', 'right', 'bottom')\r\n * @param  {String}       parentSide   Side of the parent in question ('top', 'left', 'right', 'bottom')\r\n * @return {HTMLElement}               The parent scroll element that the el's side is scrolled past, or null if there is no such element\r\n */\n\n\nfunction isScrolledPast(el, elSide, parentSide) {\n  var parent = getParentAutoScrollElement(el, true),\n      elSideVal = getRect(el)[elSide];\n  /* jshint boss:true */\n\n  while (parent) {\n    var parentSideVal = getRect(parent)[parentSide],\n        visible = void 0;\n\n    if (parentSide === 'top' || parentSide === 'left') {\n      visible = elSideVal >= parentSideVal;\n    } else {\n      visible = elSideVal <= parentSideVal;\n    }\n\n    if (!visible) return parent;\n    if (parent === getWindowScrollingElement()) break;\n    parent = getParentAutoScrollElement(parent, false);\n  }\n\n  return false;\n}\n/**\r\n * Gets nth child of el, ignoring hidden children, sortable's elements (does not ignore clone if it's visible)\r\n * and non-draggable elements\r\n * @param  {HTMLElement} el       The parent element\r\n * @param  {Number} childNum      The index of the child\r\n * @param  {Object} options       Parent Sortable's options\r\n * @return {HTMLElement}          The child at index childNum, or null if not found\r\n */\n\n\nfunction getChild(el, childNum, options) {\n  var currentChild = 0,\n      i = 0,\n      children = el.children;\n\n  while (i < children.length) {\n    if (children[i].style.display !== 'none' && children[i] !== Sortable.ghost && children[i] !== Sortable.dragged && closest(children[i], options.draggable, el, false)) {\n      if (currentChild === childNum) {\n        return children[i];\n      }\n\n      currentChild++;\n    }\n\n    i++;\n  }\n\n  return null;\n}\n/**\r\n * Gets the last child in the el, ignoring ghostEl or invisible elements (clones)\r\n * @param  {HTMLElement} el       Parent element\r\n * @param  {selector} selector    Any other elements that should be ignored\r\n * @return {HTMLElement}          The last child, ignoring ghostEl\r\n */\n\n\nfunction lastChild(el, selector) {\n  var last = el.lastElementChild;\n\n  while (last && (last === Sortable.ghost || css(last, 'display') === 'none' || selector && !matches(last, selector))) {\n    last = last.previousElementSibling;\n  }\n\n  return last || null;\n}\n/**\r\n * Returns the index of an element within its parent for a selected set of\r\n * elements\r\n * @param  {HTMLElement} el\r\n * @param  {selector} selector\r\n * @return {number}\r\n */\n\n\nfunction index(el, selector) {\n  var index = 0;\n\n  if (!el || !el.parentNode) {\n    return -1;\n  }\n  /* jshint boss:true */\n\n\n  while (el = el.previousElementSibling) {\n    if (el.nodeName.toUpperCase() !== 'TEMPLATE' && el !== Sortable.clone && (!selector || matches(el, selector))) {\n      index++;\n    }\n  }\n\n  return index;\n}\n/**\r\n * Returns the scroll offset of the given element, added with all the scroll offsets of parent elements.\r\n * The value is returned in real pixels.\r\n * @param  {HTMLElement} el\r\n * @return {Array}             Offsets in the format of [left, top]\r\n */\n\n\nfunction getRelativeScrollOffset(el) {\n  var offsetLeft = 0,\n      offsetTop = 0,\n      winScroller = getWindowScrollingElement();\n\n  if (el) {\n    do {\n      var elMatrix = matrix(el),\n          scaleX = elMatrix.a,\n          scaleY = elMatrix.d;\n      offsetLeft += el.scrollLeft * scaleX;\n      offsetTop += el.scrollTop * scaleY;\n    } while (el !== winScroller && (el = el.parentNode));\n  }\n\n  return [offsetLeft, offsetTop];\n}\n/**\r\n * Returns the index of the object within the given array\r\n * @param  {Array} arr   Array that may or may not hold the object\r\n * @param  {Object} obj  An object that has a key-value pair unique to and identical to a key-value pair in the object you want to find\r\n * @return {Number}      The index of the object in the array, or -1\r\n */\n\n\nfunction indexOfObject(arr, obj) {\n  for (var i in arr) {\n    if (!arr.hasOwnProperty(i)) continue;\n\n    for (var key in obj) {\n      if (obj.hasOwnProperty(key) && obj[key] === arr[i][key]) return Number(i);\n    }\n  }\n\n  return -1;\n}\n\nfunction getParentAutoScrollElement(el, includeSelf) {\n  // skip to window\n  if (!el || !el.getBoundingClientRect) return getWindowScrollingElement();\n  var elem = el;\n  var gotSelf = false;\n\n  do {\n    // we don't need to get elem css if it isn't even overflowing in the first place (performance)\n    if (elem.clientWidth < elem.scrollWidth || elem.clientHeight < elem.scrollHeight) {\n      var elemCSS = css(elem);\n\n      if (elem.clientWidth < elem.scrollWidth && (elemCSS.overflowX == 'auto' || elemCSS.overflowX == 'scroll') || elem.clientHeight < elem.scrollHeight && (elemCSS.overflowY == 'auto' || elemCSS.overflowY == 'scroll')) {\n        if (!elem.getBoundingClientRect || elem === document.body) return getWindowScrollingElement();\n        if (gotSelf || includeSelf) return elem;\n        gotSelf = true;\n      }\n    }\n    /* jshint boss:true */\n\n  } while (elem = elem.parentNode);\n\n  return getWindowScrollingElement();\n}\n\nfunction extend(dst, src) {\n  if (dst && src) {\n    for (var key in src) {\n      if (src.hasOwnProperty(key)) {\n        dst[key] = src[key];\n      }\n    }\n  }\n\n  return dst;\n}\n\nfunction isRectEqual(rect1, rect2) {\n  return Math.round(rect1.top) === Math.round(rect2.top) && Math.round(rect1.left) === Math.round(rect2.left) && Math.round(rect1.height) === Math.round(rect2.height) && Math.round(rect1.width) === Math.round(rect2.width);\n}\n\nvar _throttleTimeout;\n\nfunction throttle(callback, ms) {\n  return function () {\n    if (!_throttleTimeout) {\n      var args = arguments,\n          _this = this;\n\n      if (args.length === 1) {\n        callback.call(_this, args[0]);\n      } else {\n        callback.apply(_this, args);\n      }\n\n      _throttleTimeout = setTimeout(function () {\n        _throttleTimeout = void 0;\n      }, ms);\n    }\n  };\n}\n\nfunction cancelThrottle() {\n  clearTimeout(_throttleTimeout);\n  _throttleTimeout = void 0;\n}\n\nfunction scrollBy(el, x, y) {\n  el.scrollLeft += x;\n  el.scrollTop += y;\n}\n\nfunction clone(el) {\n  var Polymer = window.Polymer;\n  var $ = window.jQuery || window.Zepto;\n\n  if (Polymer && Polymer.dom) {\n    return Polymer.dom(el).cloneNode(true);\n  } else if ($) {\n    return $(el).clone(true)[0];\n  } else {\n    return el.cloneNode(true);\n  }\n}\n\nfunction setRect(el, rect) {\n  css(el, 'position', 'absolute');\n  css(el, 'top', rect.top);\n  css(el, 'left', rect.left);\n  css(el, 'width', rect.width);\n  css(el, 'height', rect.height);\n}\n\nfunction unsetRect(el) {\n  css(el, 'position', '');\n  css(el, 'top', '');\n  css(el, 'left', '');\n  css(el, 'width', '');\n  css(el, 'height', '');\n}\n\nvar expando = 'Sortable' + new Date().getTime();\n\nfunction AnimationStateManager() {\n  var animationStates = [],\n      animationCallbackId;\n  return {\n    captureAnimationState: function captureAnimationState() {\n      animationStates = [];\n      if (!this.options.animation) return;\n      var children = [].slice.call(this.el.children);\n      children.forEach(function (child) {\n        if (css(child, 'display') === 'none' || child === Sortable.ghost) return;\n        animationStates.push({\n          target: child,\n          rect: getRect(child)\n        });\n\n        var fromRect = _objectSpread({}, animationStates[animationStates.length - 1].rect); // If animating: compensate for current animation\n\n\n        if (child.thisAnimationDuration) {\n          var childMatrix = matrix(child, true);\n\n          if (childMatrix) {\n            fromRect.top -= childMatrix.f;\n            fromRect.left -= childMatrix.e;\n          }\n        }\n\n        child.fromRect = fromRect;\n      });\n    },\n    addAnimationState: function addAnimationState(state) {\n      animationStates.push(state);\n    },\n    removeAnimationState: function removeAnimationState(target) {\n      animationStates.splice(indexOfObject(animationStates, {\n        target: target\n      }), 1);\n    },\n    animateAll: function animateAll(callback) {\n      var _this = this;\n\n      if (!this.options.animation) {\n        clearTimeout(animationCallbackId);\n        if (typeof callback === 'function') callback();\n        return;\n      }\n\n      var animating = false,\n          animationTime = 0;\n      animationStates.forEach(function (state) {\n        var time = 0,\n            target = state.target,\n            fromRect = target.fromRect,\n            toRect = getRect(target),\n            prevFromRect = target.prevFromRect,\n            prevToRect = target.prevToRect,\n            animatingRect = state.rect,\n            targetMatrix = matrix(target, true);\n\n        if (targetMatrix) {\n          // Compensate for current animation\n          toRect.top -= targetMatrix.f;\n          toRect.left -= targetMatrix.e;\n        }\n\n        target.toRect = toRect;\n\n        if (target.thisAnimationDuration) {\n          // Could also check if animatingRect is between fromRect and toRect\n          if (isRectEqual(prevFromRect, toRect) && !isRectEqual(fromRect, toRect) && // Make sure animatingRect is on line between toRect & fromRect\n          (animatingRect.top - toRect.top) / (animatingRect.left - toRect.left) === (fromRect.top - toRect.top) / (fromRect.left - toRect.left)) {\n            // If returning to same place as started from animation and on same axis\n            time = calculateRealTime(animatingRect, prevFromRect, prevToRect, _this.options);\n          }\n        } // if fromRect != toRect: animate\n\n\n        if (!isRectEqual(toRect, fromRect)) {\n          target.prevFromRect = fromRect;\n          target.prevToRect = toRect;\n\n          if (!time) {\n            time = _this.options.animation;\n          }\n\n          _this.animate(target, animatingRect, toRect, time);\n        }\n\n        if (time) {\n          animating = true;\n          animationTime = Math.max(animationTime, time);\n          clearTimeout(target.animationResetTimer);\n          target.animationResetTimer = setTimeout(function () {\n            target.animationTime = 0;\n            target.prevFromRect = null;\n            target.fromRect = null;\n            target.prevToRect = null;\n            target.thisAnimationDuration = null;\n          }, time);\n          target.thisAnimationDuration = time;\n        }\n      });\n      clearTimeout(animationCallbackId);\n\n      if (!animating) {\n        if (typeof callback === 'function') callback();\n      } else {\n        animationCallbackId = setTimeout(function () {\n          if (typeof callback === 'function') callback();\n        }, animationTime);\n      }\n\n      animationStates = [];\n    },\n    animate: function animate(target, currentRect, toRect, duration) {\n      if (duration) {\n        css(target, 'transition', '');\n        css(target, 'transform', '');\n        var elMatrix = matrix(this.el),\n            scaleX = elMatrix && elMatrix.a,\n            scaleY = elMatrix && elMatrix.d,\n            translateX = (currentRect.left - toRect.left) / (scaleX || 1),\n            translateY = (currentRect.top - toRect.top) / (scaleY || 1);\n        target.animatingX = !!translateX;\n        target.animatingY = !!translateY;\n        css(target, 'transform', 'translate3d(' + translateX + 'px,' + translateY + 'px,0)');\n        repaint(target); // repaint\n\n        css(target, 'transition', 'transform ' + duration + 'ms' + (this.options.easing ? ' ' + this.options.easing : ''));\n        css(target, 'transform', 'translate3d(0,0,0)');\n        typeof target.animated === 'number' && clearTimeout(target.animated);\n        target.animated = setTimeout(function () {\n          css(target, 'transition', '');\n          css(target, 'transform', '');\n          target.animated = false;\n          target.animatingX = false;\n          target.animatingY = false;\n        }, duration);\n      }\n    }\n  };\n}\n\nfunction repaint(target) {\n  return target.offsetWidth;\n}\n\nfunction calculateRealTime(animatingRect, fromRect, toRect, options) {\n  return Math.sqrt(Math.pow(fromRect.top - animatingRect.top, 2) + Math.pow(fromRect.left - animatingRect.left, 2)) / Math.sqrt(Math.pow(fromRect.top - toRect.top, 2) + Math.pow(fromRect.left - toRect.left, 2)) * options.animation;\n}\n\nvar plugins = [];\nvar defaults = {\n  initializeByDefault: true\n};\nvar PluginManager = {\n  mount: function mount(plugin) {\n    // Set default static properties\n    for (var option in defaults) {\n      if (defaults.hasOwnProperty(option) && !(option in plugin)) {\n        plugin[option] = defaults[option];\n      }\n    }\n\n    plugins.push(plugin);\n  },\n  pluginEvent: function pluginEvent(eventName, sortable, evt) {\n    var _this = this;\n\n    this.eventCanceled = false;\n\n    evt.cancel = function () {\n      _this.eventCanceled = true;\n    };\n\n    var eventNameGlobal = eventName + 'Global';\n    plugins.forEach(function (plugin) {\n      if (!sortable[plugin.pluginName]) return; // Fire global events if it exists in this sortable\n\n      if (sortable[plugin.pluginName][eventNameGlobal]) {\n        sortable[plugin.pluginName][eventNameGlobal](_objectSpread({\n          sortable: sortable\n        }, evt));\n      } // Only fire plugin event if plugin is enabled in this sortable,\n      // and plugin has event defined\n\n\n      if (sortable.options[plugin.pluginName] && sortable[plugin.pluginName][eventName]) {\n        sortable[plugin.pluginName][eventName](_objectSpread({\n          sortable: sortable\n        }, evt));\n      }\n    });\n  },\n  initializePlugins: function initializePlugins(sortable, el, defaults, options) {\n    plugins.forEach(function (plugin) {\n      var pluginName = plugin.pluginName;\n      if (!sortable.options[pluginName] && !plugin.initializeByDefault) return;\n      var initialized = new plugin(sortable, el, sortable.options);\n      initialized.sortable = sortable;\n      initialized.options = sortable.options;\n      sortable[pluginName] = initialized; // Add default options from plugin\n\n      _extends(defaults, initialized.defaults);\n    });\n\n    for (var option in sortable.options) {\n      if (!sortable.options.hasOwnProperty(option)) continue;\n      var modified = this.modifyOption(sortable, option, sortable.options[option]);\n\n      if (typeof modified !== 'undefined') {\n        sortable.options[option] = modified;\n      }\n    }\n  },\n  getEventProperties: function getEventProperties(name, sortable) {\n    var eventProperties = {};\n    plugins.forEach(function (plugin) {\n      if (typeof plugin.eventProperties !== 'function') return;\n\n      _extends(eventProperties, plugin.eventProperties.call(sortable[plugin.pluginName], name));\n    });\n    return eventProperties;\n  },\n  modifyOption: function modifyOption(sortable, name, value) {\n    var modifiedValue;\n    plugins.forEach(function (plugin) {\n      // Plugin must exist on the Sortable\n      if (!sortable[plugin.pluginName]) return; // If static option listener exists for this option, call in the context of the Sortable's instance of this plugin\n\n      if (plugin.optionListeners && typeof plugin.optionListeners[name] === 'function') {\n        modifiedValue = plugin.optionListeners[name].call(sortable[plugin.pluginName], value);\n      }\n    });\n    return modifiedValue;\n  }\n};\n\nfunction dispatchEvent(_ref) {\n  var sortable = _ref.sortable,\n      rootEl = _ref.rootEl,\n      name = _ref.name,\n      targetEl = _ref.targetEl,\n      cloneEl = _ref.cloneEl,\n      toEl = _ref.toEl,\n      fromEl = _ref.fromEl,\n      oldIndex = _ref.oldIndex,\n      newIndex = _ref.newIndex,\n      oldDraggableIndex = _ref.oldDraggableIndex,\n      newDraggableIndex = _ref.newDraggableIndex,\n      originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      extraEventProperties = _ref.extraEventProperties;\n  sortable = sortable || rootEl && rootEl[expando];\n  if (!sortable) return;\n  var evt,\n      options = sortable.options,\n      onName = 'on' + name.charAt(0).toUpperCase() + name.substr(1); // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent(name, {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent(name, true, true);\n  }\n\n  evt.to = toEl || rootEl;\n  evt.from = fromEl || rootEl;\n  evt.item = targetEl || rootEl;\n  evt.clone = cloneEl;\n  evt.oldIndex = oldIndex;\n  evt.newIndex = newIndex;\n  evt.oldDraggableIndex = oldDraggableIndex;\n  evt.newDraggableIndex = newDraggableIndex;\n  evt.originalEvent = originalEvent;\n  evt.pullMode = putSortable ? putSortable.lastPutMode : undefined;\n\n  var allEventProperties = _objectSpread({}, extraEventProperties, PluginManager.getEventProperties(name, sortable));\n\n  for (var option in allEventProperties) {\n    evt[option] = allEventProperties[option];\n  }\n\n  if (rootEl) {\n    rootEl.dispatchEvent(evt);\n  }\n\n  if (options[onName]) {\n    options[onName].call(sortable, evt);\n  }\n}\n\nvar pluginEvent = function pluginEvent(eventName, sortable) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      originalEvent = _ref.evt,\n      data = _objectWithoutProperties(_ref, [\"evt\"]);\n\n  PluginManager.pluginEvent.bind(Sortable)(eventName, sortable, _objectSpread({\n    dragEl: dragEl,\n    parentEl: parentEl,\n    ghostEl: ghostEl,\n    rootEl: rootEl,\n    nextEl: nextEl,\n    lastDownEl: lastDownEl,\n    cloneEl: cloneEl,\n    cloneHidden: cloneHidden,\n    dragStarted: moved,\n    putSortable: putSortable,\n    activeSortable: Sortable.active,\n    originalEvent: originalEvent,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex,\n    hideGhostForTarget: _hideGhostForTarget,\n    unhideGhostForTarget: _unhideGhostForTarget,\n    cloneNowHidden: function cloneNowHidden() {\n      cloneHidden = true;\n    },\n    cloneNowShown: function cloneNowShown() {\n      cloneHidden = false;\n    },\n    dispatchSortableEvent: function dispatchSortableEvent(name) {\n      _dispatchEvent({\n        sortable: sortable,\n        name: name,\n        originalEvent: originalEvent\n      });\n    }\n  }, data));\n};\n\nfunction _dispatchEvent(info) {\n  dispatchEvent(_objectSpread({\n    putSortable: putSortable,\n    cloneEl: cloneEl,\n    targetEl: dragEl,\n    rootEl: rootEl,\n    oldIndex: oldIndex,\n    oldDraggableIndex: oldDraggableIndex,\n    newIndex: newIndex,\n    newDraggableIndex: newDraggableIndex\n  }, info));\n}\n\nvar dragEl,\n    parentEl,\n    ghostEl,\n    rootEl,\n    nextEl,\n    lastDownEl,\n    cloneEl,\n    cloneHidden,\n    oldIndex,\n    newIndex,\n    oldDraggableIndex,\n    newDraggableIndex,\n    activeGroup,\n    putSortable,\n    awaitingDragStarted = false,\n    ignoreNextClick = false,\n    sortables = [],\n    tapEvt,\n    touchEvt,\n    lastDx,\n    lastDy,\n    tapDistanceLeft,\n    tapDistanceTop,\n    moved,\n    lastTarget,\n    lastDirection,\n    pastFirstInvertThresh = false,\n    isCircumstantialInvert = false,\n    targetMoveDistance,\n    // For positioning ghost absolutely\nghostRelativeParent,\n    ghostRelativeParentInitialScroll = [],\n    // (left, top)\n_silent = false,\n    savedInputChecked = [];\n/** @const */\n\nvar documentExists = typeof document !== 'undefined',\n    PositionGhostAbsolutely = IOS,\n    CSSFloatProperty = Edge || IE11OrLess ? 'cssFloat' : 'float',\n    // This will not pass for IE9, because IE9 DnD only works on anchors\nsupportDraggable = documentExists && !ChromeForAndroid && !IOS && 'draggable' in document.createElement('div'),\n    supportCssPointerEvents = function () {\n  if (!documentExists) return; // false when <= IE11\n\n  if (IE11OrLess) {\n    return false;\n  }\n\n  var el = document.createElement('x');\n  el.style.cssText = 'pointer-events:auto';\n  return el.style.pointerEvents === 'auto';\n}(),\n    _detectDirection = function _detectDirection(el, options) {\n  var elCSS = css(el),\n      elWidth = parseInt(elCSS.width) - parseInt(elCSS.paddingLeft) - parseInt(elCSS.paddingRight) - parseInt(elCSS.borderLeftWidth) - parseInt(elCSS.borderRightWidth),\n      child1 = getChild(el, 0, options),\n      child2 = getChild(el, 1, options),\n      firstChildCSS = child1 && css(child1),\n      secondChildCSS = child2 && css(child2),\n      firstChildWidth = firstChildCSS && parseInt(firstChildCSS.marginLeft) + parseInt(firstChildCSS.marginRight) + getRect(child1).width,\n      secondChildWidth = secondChildCSS && parseInt(secondChildCSS.marginLeft) + parseInt(secondChildCSS.marginRight) + getRect(child2).width;\n\n  if (elCSS.display === 'flex') {\n    return elCSS.flexDirection === 'column' || elCSS.flexDirection === 'column-reverse' ? 'vertical' : 'horizontal';\n  }\n\n  if (elCSS.display === 'grid') {\n    return elCSS.gridTemplateColumns.split(' ').length <= 1 ? 'vertical' : 'horizontal';\n  }\n\n  if (child1 && firstChildCSS[\"float\"] && firstChildCSS[\"float\"] !== 'none') {\n    var touchingSideChild2 = firstChildCSS[\"float\"] === 'left' ? 'left' : 'right';\n    return child2 && (secondChildCSS.clear === 'both' || secondChildCSS.clear === touchingSideChild2) ? 'vertical' : 'horizontal';\n  }\n\n  return child1 && (firstChildCSS.display === 'block' || firstChildCSS.display === 'flex' || firstChildCSS.display === 'table' || firstChildCSS.display === 'grid' || firstChildWidth >= elWidth && elCSS[CSSFloatProperty] === 'none' || child2 && elCSS[CSSFloatProperty] === 'none' && firstChildWidth + secondChildWidth > elWidth) ? 'vertical' : 'horizontal';\n},\n    _dragElInRowColumn = function _dragElInRowColumn(dragRect, targetRect, vertical) {\n  var dragElS1Opp = vertical ? dragRect.left : dragRect.top,\n      dragElS2Opp = vertical ? dragRect.right : dragRect.bottom,\n      dragElOppLength = vertical ? dragRect.width : dragRect.height,\n      targetS1Opp = vertical ? targetRect.left : targetRect.top,\n      targetS2Opp = vertical ? targetRect.right : targetRect.bottom,\n      targetOppLength = vertical ? targetRect.width : targetRect.height;\n  return dragElS1Opp === targetS1Opp || dragElS2Opp === targetS2Opp || dragElS1Opp + dragElOppLength / 2 === targetS1Opp + targetOppLength / 2;\n},\n\n/**\n * Detects first nearest empty sortable to X and Y position using emptyInsertThreshold.\n * @param  {Number} x      X position\n * @param  {Number} y      Y position\n * @return {HTMLElement}   Element of the first found nearest Sortable\n */\n_detectNearestEmptySortable = function _detectNearestEmptySortable(x, y) {\n  var ret;\n  sortables.some(function (sortable) {\n    if (lastChild(sortable)) return;\n    var rect = getRect(sortable),\n        threshold = sortable[expando].options.emptyInsertThreshold,\n        insideHorizontally = x >= rect.left - threshold && x <= rect.right + threshold,\n        insideVertically = y >= rect.top - threshold && y <= rect.bottom + threshold;\n\n    if (threshold && insideHorizontally && insideVertically) {\n      return ret = sortable;\n    }\n  });\n  return ret;\n},\n    _prepareGroup = function _prepareGroup(options) {\n  function toFn(value, pull) {\n    return function (to, from, dragEl, evt) {\n      var sameGroup = to.options.group.name && from.options.group.name && to.options.group.name === from.options.group.name;\n\n      if (value == null && (pull || sameGroup)) {\n        // Default pull value\n        // Default pull and put value if same group\n        return true;\n      } else if (value == null || value === false) {\n        return false;\n      } else if (pull && value === 'clone') {\n        return value;\n      } else if (typeof value === 'function') {\n        return toFn(value(to, from, dragEl, evt), pull)(to, from, dragEl, evt);\n      } else {\n        var otherGroup = (pull ? to : from).options.group.name;\n        return value === true || typeof value === 'string' && value === otherGroup || value.join && value.indexOf(otherGroup) > -1;\n      }\n    };\n  }\n\n  var group = {};\n  var originalGroup = options.group;\n\n  if (!originalGroup || _typeof(originalGroup) != 'object') {\n    originalGroup = {\n      name: originalGroup\n    };\n  }\n\n  group.name = originalGroup.name;\n  group.checkPull = toFn(originalGroup.pull, true);\n  group.checkPut = toFn(originalGroup.put);\n  group.revertClone = originalGroup.revertClone;\n  options.group = group;\n},\n    _hideGhostForTarget = function _hideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', 'none');\n  }\n},\n    _unhideGhostForTarget = function _unhideGhostForTarget() {\n  if (!supportCssPointerEvents && ghostEl) {\n    css(ghostEl, 'display', '');\n  }\n}; // #1184 fix - Prevent click event on fallback if dragged but item not changed position\n\n\nif (documentExists) {\n  document.addEventListener('click', function (evt) {\n    if (ignoreNextClick) {\n      evt.preventDefault();\n      evt.stopPropagation && evt.stopPropagation();\n      evt.stopImmediatePropagation && evt.stopImmediatePropagation();\n      ignoreNextClick = false;\n      return false;\n    }\n  }, true);\n}\n\nvar nearestEmptyInsertDetectEvent = function nearestEmptyInsertDetectEvent(evt) {\n  if (dragEl) {\n    evt = evt.touches ? evt.touches[0] : evt;\n\n    var nearest = _detectNearestEmptySortable(evt.clientX, evt.clientY);\n\n    if (nearest) {\n      // Create imitation event\n      var event = {};\n\n      for (var i in evt) {\n        if (evt.hasOwnProperty(i)) {\n          event[i] = evt[i];\n        }\n      }\n\n      event.target = event.rootEl = nearest;\n      event.preventDefault = void 0;\n      event.stopPropagation = void 0;\n\n      nearest[expando]._onDragOver(event);\n    }\n  }\n};\n\nvar _checkOutsideTargetEl = function _checkOutsideTargetEl(evt) {\n  if (dragEl) {\n    dragEl.parentNode[expando]._isOutsideThisEl(evt.target);\n  }\n};\n/**\n * @class  Sortable\n * @param  {HTMLElement}  el\n * @param  {Object}       [options]\n */\n\n\nfunction Sortable(el, options) {\n  if (!(el && el.nodeType && el.nodeType === 1)) {\n    throw \"Sortable: `el` must be an HTMLElement, not \".concat({}.toString.call(el));\n  }\n\n  this.el = el; // root element\n\n  this.options = options = _extends({}, options); // Export instance\n\n  el[expando] = this;\n  var defaults = {\n    group: null,\n    sort: true,\n    disabled: false,\n    store: null,\n    handle: null,\n    draggable: /^[uo]l$/i.test(el.nodeName) ? '>li' : '>*',\n    swapThreshold: 1,\n    // percentage; 0 <= x <= 1\n    invertSwap: false,\n    // invert always\n    invertedSwapThreshold: null,\n    // will be set to same as swapThreshold if default\n    removeCloneOnHide: true,\n    direction: function direction() {\n      return _detectDirection(el, this.options);\n    },\n    ghostClass: 'sortable-ghost',\n    chosenClass: 'sortable-chosen',\n    dragClass: 'sortable-drag',\n    ignore: 'a, img',\n    filter: null,\n    preventOnFilter: true,\n    animation: 0,\n    easing: null,\n    setData: function setData(dataTransfer, dragEl) {\n      dataTransfer.setData('Text', dragEl.textContent);\n    },\n    dropBubble: false,\n    dragoverBubble: false,\n    dataIdAttr: 'data-id',\n    delay: 0,\n    delayOnTouchOnly: false,\n    touchStartThreshold: (Number.parseInt ? Number : window).parseInt(window.devicePixelRatio, 10) || 1,\n    forceFallback: false,\n    fallbackClass: 'sortable-fallback',\n    fallbackOnBody: false,\n    fallbackTolerance: 0,\n    fallbackOffset: {\n      x: 0,\n      y: 0\n    },\n    supportPointer: Sortable.supportPointer !== false && 'PointerEvent' in window,\n    emptyInsertThreshold: 5\n  };\n  PluginManager.initializePlugins(this, el, defaults); // Set default options\n\n  for (var name in defaults) {\n    !(name in options) && (options[name] = defaults[name]);\n  }\n\n  _prepareGroup(options); // Bind all private methods\n\n\n  for (var fn in this) {\n    if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n      this[fn] = this[fn].bind(this);\n    }\n  } // Setup drag mode\n\n\n  this.nativeDraggable = options.forceFallback ? false : supportDraggable;\n\n  if (this.nativeDraggable) {\n    // Touch start threshold cannot be greater than the native dragstart threshold\n    this.options.touchStartThreshold = 1;\n  } // Bind events\n\n\n  if (options.supportPointer) {\n    on(el, 'pointerdown', this._onTapStart);\n  } else {\n    on(el, 'mousedown', this._onTapStart);\n    on(el, 'touchstart', this._onTapStart);\n  }\n\n  if (this.nativeDraggable) {\n    on(el, 'dragover', this);\n    on(el, 'dragenter', this);\n  }\n\n  sortables.push(this.el); // Restore sorting\n\n  options.store && options.store.get && this.sort(options.store.get(this) || []); // Add animation state manager\n\n  _extends(this, AnimationStateManager());\n}\n\nSortable.prototype =\n/** @lends Sortable.prototype */\n{\n  constructor: Sortable,\n  _isOutsideThisEl: function _isOutsideThisEl(target) {\n    if (!this.el.contains(target) && target !== this.el) {\n      lastTarget = null;\n    }\n  },\n  _getDirection: function _getDirection(evt, target) {\n    return typeof this.options.direction === 'function' ? this.options.direction.call(this, evt, target, dragEl) : this.options.direction;\n  },\n  _onTapStart: function _onTapStart(\n  /** Event|TouchEvent */\n  evt) {\n    if (!evt.cancelable) return;\n\n    var _this = this,\n        el = this.el,\n        options = this.options,\n        preventOnFilter = options.preventOnFilter,\n        type = evt.type,\n        touch = evt.touches && evt.touches[0] || evt.pointerType && evt.pointerType === 'touch' && evt,\n        target = (touch || evt).target,\n        originalTarget = evt.target.shadowRoot && (evt.path && evt.path[0] || evt.composedPath && evt.composedPath()[0]) || target,\n        filter = options.filter;\n\n    _saveInputCheckedState(el); // Don't trigger start event when an element is been dragged, otherwise the evt.oldindex always wrong when set option.group.\n\n\n    if (dragEl) {\n      return;\n    }\n\n    if (/mousedown|pointerdown/.test(type) && evt.button !== 0 || options.disabled) {\n      return; // only left button and enabled\n    } // cancel dnd if original target is content editable\n\n\n    if (originalTarget.isContentEditable) {\n      return;\n    }\n\n    target = closest(target, options.draggable, el, false);\n\n    if (target && target.animated) {\n      return;\n    }\n\n    if (lastDownEl === target) {\n      // Ignoring duplicate `down`\n      return;\n    } // Get the index of the dragged element within its parent\n\n\n    oldIndex = index(target);\n    oldDraggableIndex = index(target, options.draggable); // Check filter\n\n    if (typeof filter === 'function') {\n      if (filter.call(this, evt, target, this)) {\n        _dispatchEvent({\n          sortable: _this,\n          rootEl: originalTarget,\n          name: 'filter',\n          targetEl: target,\n          toEl: el,\n          fromEl: el\n        });\n\n        pluginEvent('filter', _this, {\n          evt: evt\n        });\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    } else if (filter) {\n      filter = filter.split(',').some(function (criteria) {\n        criteria = closest(originalTarget, criteria.trim(), el, false);\n\n        if (criteria) {\n          _dispatchEvent({\n            sortable: _this,\n            rootEl: criteria,\n            name: 'filter',\n            targetEl: target,\n            fromEl: el,\n            toEl: el\n          });\n\n          pluginEvent('filter', _this, {\n            evt: evt\n          });\n          return true;\n        }\n      });\n\n      if (filter) {\n        preventOnFilter && evt.cancelable && evt.preventDefault();\n        return; // cancel dnd\n      }\n    }\n\n    if (options.handle && !closest(originalTarget, options.handle, el, false)) {\n      return;\n    } // Prepare `dragstart`\n\n\n    this._prepareDragStart(evt, touch, target);\n  },\n  _prepareDragStart: function _prepareDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch,\n  /** HTMLElement */\n  target) {\n    var _this = this,\n        el = _this.el,\n        options = _this.options,\n        ownerDocument = el.ownerDocument,\n        dragStartFn;\n\n    if (target && !dragEl && target.parentNode === el) {\n      var dragRect = getRect(target);\n      rootEl = el;\n      dragEl = target;\n      parentEl = dragEl.parentNode;\n      nextEl = dragEl.nextSibling;\n      lastDownEl = target;\n      activeGroup = options.group;\n      Sortable.dragged = dragEl;\n      tapEvt = {\n        target: dragEl,\n        clientX: (touch || evt).clientX,\n        clientY: (touch || evt).clientY\n      };\n      tapDistanceLeft = tapEvt.clientX - dragRect.left;\n      tapDistanceTop = tapEvt.clientY - dragRect.top;\n      this._lastX = (touch || evt).clientX;\n      this._lastY = (touch || evt).clientY;\n      dragEl.style['will-change'] = 'all';\n\n      dragStartFn = function dragStartFn() {\n        pluginEvent('delayEnded', _this, {\n          evt: evt\n        });\n\n        if (Sortable.eventCanceled) {\n          _this._onDrop();\n\n          return;\n        } // Delayed drag has been triggered\n        // we can re-enable the events: touchmove/mousemove\n\n\n        _this._disableDelayedDragEvents();\n\n        if (!FireFox && _this.nativeDraggable) {\n          dragEl.draggable = true;\n        } // Bind the events: dragstart/dragend\n\n\n        _this._triggerDragStart(evt, touch); // Drag start event\n\n\n        _dispatchEvent({\n          sortable: _this,\n          name: 'choose',\n          originalEvent: evt\n        }); // Chosen item\n\n\n        toggleClass(dragEl, options.chosenClass, true);\n      }; // Disable \"draggable\"\n\n\n      options.ignore.split(',').forEach(function (criteria) {\n        find(dragEl, criteria.trim(), _disableDraggable);\n      });\n      on(ownerDocument, 'dragover', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mousemove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'touchmove', nearestEmptyInsertDetectEvent);\n      on(ownerDocument, 'mouseup', _this._onDrop);\n      on(ownerDocument, 'touchend', _this._onDrop);\n      on(ownerDocument, 'touchcancel', _this._onDrop); // Make dragEl draggable (must be before delay for FireFox)\n\n      if (FireFox && this.nativeDraggable) {\n        this.options.touchStartThreshold = 4;\n        dragEl.draggable = true;\n      }\n\n      pluginEvent('delayStart', this, {\n        evt: evt\n      }); // Delay is impossible for native DnD in Edge or IE\n\n      if (options.delay && (!options.delayOnTouchOnly || touch) && (!this.nativeDraggable || !(Edge || IE11OrLess))) {\n        if (Sortable.eventCanceled) {\n          this._onDrop();\n\n          return;\n        } // If the user moves the pointer or let go the click or touch\n        // before the delay has been reached:\n        // disable the delayed drag\n\n\n        on(ownerDocument, 'mouseup', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchend', _this._disableDelayedDrag);\n        on(ownerDocument, 'touchcancel', _this._disableDelayedDrag);\n        on(ownerDocument, 'mousemove', _this._delayedDragTouchMoveHandler);\n        on(ownerDocument, 'touchmove', _this._delayedDragTouchMoveHandler);\n        options.supportPointer && on(ownerDocument, 'pointermove', _this._delayedDragTouchMoveHandler);\n        _this._dragStartTimer = setTimeout(dragStartFn, options.delay);\n      } else {\n        dragStartFn();\n      }\n    }\n  },\n  _delayedDragTouchMoveHandler: function _delayedDragTouchMoveHandler(\n  /** TouchEvent|PointerEvent **/\n  e) {\n    var touch = e.touches ? e.touches[0] : e;\n\n    if (Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) >= Math.floor(this.options.touchStartThreshold / (this.nativeDraggable && window.devicePixelRatio || 1))) {\n      this._disableDelayedDrag();\n    }\n  },\n  _disableDelayedDrag: function _disableDelayedDrag() {\n    dragEl && _disableDraggable(dragEl);\n    clearTimeout(this._dragStartTimer);\n\n    this._disableDelayedDragEvents();\n  },\n  _disableDelayedDragEvents: function _disableDelayedDragEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._disableDelayedDrag);\n    off(ownerDocument, 'touchend', this._disableDelayedDrag);\n    off(ownerDocument, 'touchcancel', this._disableDelayedDrag);\n    off(ownerDocument, 'mousemove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'touchmove', this._delayedDragTouchMoveHandler);\n    off(ownerDocument, 'pointermove', this._delayedDragTouchMoveHandler);\n  },\n  _triggerDragStart: function _triggerDragStart(\n  /** Event */\n  evt,\n  /** Touch */\n  touch) {\n    touch = touch || evt.pointerType == 'touch' && evt;\n\n    if (!this.nativeDraggable || touch) {\n      if (this.options.supportPointer) {\n        on(document, 'pointermove', this._onTouchMove);\n      } else if (touch) {\n        on(document, 'touchmove', this._onTouchMove);\n      } else {\n        on(document, 'mousemove', this._onTouchMove);\n      }\n    } else {\n      on(dragEl, 'dragend', this);\n      on(rootEl, 'dragstart', this._onDragStart);\n    }\n\n    try {\n      if (document.selection) {\n        // Timeout neccessary for IE9\n        _nextTick(function () {\n          document.selection.empty();\n        });\n      } else {\n        window.getSelection().removeAllRanges();\n      }\n    } catch (err) {}\n  },\n  _dragStarted: function _dragStarted(fallback, evt) {\n\n    awaitingDragStarted = false;\n\n    if (rootEl && dragEl) {\n      pluginEvent('dragStarted', this, {\n        evt: evt\n      });\n\n      if (this.nativeDraggable) {\n        on(document, 'dragover', _checkOutsideTargetEl);\n      }\n\n      var options = this.options; // Apply effect\n\n      !fallback && toggleClass(dragEl, options.dragClass, false);\n      toggleClass(dragEl, options.ghostClass, true);\n      Sortable.active = this;\n      fallback && this._appendGhost(); // Drag start event\n\n      _dispatchEvent({\n        sortable: this,\n        name: 'start',\n        originalEvent: evt\n      });\n    } else {\n      this._nulling();\n    }\n  },\n  _emulateDragOver: function _emulateDragOver() {\n    if (touchEvt) {\n      this._lastX = touchEvt.clientX;\n      this._lastY = touchEvt.clientY;\n\n      _hideGhostForTarget();\n\n      var target = document.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n      var parent = target;\n\n      while (target && target.shadowRoot) {\n        target = target.shadowRoot.elementFromPoint(touchEvt.clientX, touchEvt.clientY);\n        if (target === parent) break;\n        parent = target;\n      }\n\n      dragEl.parentNode[expando]._isOutsideThisEl(target);\n\n      if (parent) {\n        do {\n          if (parent[expando]) {\n            var inserted = void 0;\n            inserted = parent[expando]._onDragOver({\n              clientX: touchEvt.clientX,\n              clientY: touchEvt.clientY,\n              target: target,\n              rootEl: parent\n            });\n\n            if (inserted && !this.options.dragoverBubble) {\n              break;\n            }\n          }\n\n          target = parent; // store last element\n        }\n        /* jshint boss:true */\n        while (parent = parent.parentNode);\n      }\n\n      _unhideGhostForTarget();\n    }\n  },\n  _onTouchMove: function _onTouchMove(\n  /**TouchEvent*/\n  evt) {\n    if (tapEvt) {\n      var options = this.options,\n          fallbackTolerance = options.fallbackTolerance,\n          fallbackOffset = options.fallbackOffset,\n          touch = evt.touches ? evt.touches[0] : evt,\n          ghostMatrix = ghostEl && matrix(ghostEl, true),\n          scaleX = ghostEl && ghostMatrix && ghostMatrix.a,\n          scaleY = ghostEl && ghostMatrix && ghostMatrix.d,\n          relativeScrollOffset = PositionGhostAbsolutely && ghostRelativeParent && getRelativeScrollOffset(ghostRelativeParent),\n          dx = (touch.clientX - tapEvt.clientX + fallbackOffset.x) / (scaleX || 1) + (relativeScrollOffset ? relativeScrollOffset[0] - ghostRelativeParentInitialScroll[0] : 0) / (scaleX || 1),\n          dy = (touch.clientY - tapEvt.clientY + fallbackOffset.y) / (scaleY || 1) + (relativeScrollOffset ? relativeScrollOffset[1] - ghostRelativeParentInitialScroll[1] : 0) / (scaleY || 1); // only set the status to dragging, when we are actually dragging\n\n      if (!Sortable.active && !awaitingDragStarted) {\n        if (fallbackTolerance && Math.max(Math.abs(touch.clientX - this._lastX), Math.abs(touch.clientY - this._lastY)) < fallbackTolerance) {\n          return;\n        }\n\n        this._onDragStart(evt, true);\n      }\n\n      if (ghostEl) {\n        if (ghostMatrix) {\n          ghostMatrix.e += dx - (lastDx || 0);\n          ghostMatrix.f += dy - (lastDy || 0);\n        } else {\n          ghostMatrix = {\n            a: 1,\n            b: 0,\n            c: 0,\n            d: 1,\n            e: dx,\n            f: dy\n          };\n        }\n\n        var cssMatrix = \"matrix(\".concat(ghostMatrix.a, \",\").concat(ghostMatrix.b, \",\").concat(ghostMatrix.c, \",\").concat(ghostMatrix.d, \",\").concat(ghostMatrix.e, \",\").concat(ghostMatrix.f, \")\");\n        css(ghostEl, 'webkitTransform', cssMatrix);\n        css(ghostEl, 'mozTransform', cssMatrix);\n        css(ghostEl, 'msTransform', cssMatrix);\n        css(ghostEl, 'transform', cssMatrix);\n        lastDx = dx;\n        lastDy = dy;\n        touchEvt = touch;\n      }\n\n      evt.cancelable && evt.preventDefault();\n    }\n  },\n  _appendGhost: function _appendGhost() {\n    // Bug if using scale(): https://stackoverflow.com/questions/2637058\n    // Not being adjusted for\n    if (!ghostEl) {\n      var container = this.options.fallbackOnBody ? document.body : rootEl,\n          rect = getRect(dragEl, true, PositionGhostAbsolutely, true, container),\n          options = this.options; // Position absolutely\n\n      if (PositionGhostAbsolutely) {\n        // Get relatively positioned parent\n        ghostRelativeParent = container;\n\n        while (css(ghostRelativeParent, 'position') === 'static' && css(ghostRelativeParent, 'transform') === 'none' && ghostRelativeParent !== document) {\n          ghostRelativeParent = ghostRelativeParent.parentNode;\n        }\n\n        if (ghostRelativeParent !== document.body && ghostRelativeParent !== document.documentElement) {\n          if (ghostRelativeParent === document) ghostRelativeParent = getWindowScrollingElement();\n          rect.top += ghostRelativeParent.scrollTop;\n          rect.left += ghostRelativeParent.scrollLeft;\n        } else {\n          ghostRelativeParent = getWindowScrollingElement();\n        }\n\n        ghostRelativeParentInitialScroll = getRelativeScrollOffset(ghostRelativeParent);\n      }\n\n      ghostEl = dragEl.cloneNode(true);\n      toggleClass(ghostEl, options.ghostClass, false);\n      toggleClass(ghostEl, options.fallbackClass, true);\n      toggleClass(ghostEl, options.dragClass, true);\n      css(ghostEl, 'transition', '');\n      css(ghostEl, 'transform', '');\n      css(ghostEl, 'box-sizing', 'border-box');\n      css(ghostEl, 'margin', 0);\n      css(ghostEl, 'top', rect.top);\n      css(ghostEl, 'left', rect.left);\n      css(ghostEl, 'width', rect.width);\n      css(ghostEl, 'height', rect.height);\n      css(ghostEl, 'opacity', '0.8');\n      css(ghostEl, 'position', PositionGhostAbsolutely ? 'absolute' : 'fixed');\n      css(ghostEl, 'zIndex', '100000');\n      css(ghostEl, 'pointerEvents', 'none');\n      Sortable.ghost = ghostEl;\n      container.appendChild(ghostEl); // Set transform-origin\n\n      css(ghostEl, 'transform-origin', tapDistanceLeft / parseInt(ghostEl.style.width) * 100 + '% ' + tapDistanceTop / parseInt(ghostEl.style.height) * 100 + '%');\n    }\n  },\n  _onDragStart: function _onDragStart(\n  /**Event*/\n  evt,\n  /**boolean*/\n  fallback) {\n    var _this = this;\n\n    var dataTransfer = evt.dataTransfer;\n    var options = _this.options;\n    pluginEvent('dragStart', this, {\n      evt: evt\n    });\n\n    if (Sortable.eventCanceled) {\n      this._onDrop();\n\n      return;\n    }\n\n    pluginEvent('setupClone', this);\n\n    if (!Sortable.eventCanceled) {\n      cloneEl = clone(dragEl);\n      cloneEl.draggable = false;\n      cloneEl.style['will-change'] = '';\n\n      this._hideClone();\n\n      toggleClass(cloneEl, this.options.chosenClass, false);\n      Sortable.clone = cloneEl;\n    } // #1143: IFrame support workaround\n\n\n    _this.cloneId = _nextTick(function () {\n      pluginEvent('clone', _this);\n      if (Sortable.eventCanceled) return;\n\n      if (!_this.options.removeCloneOnHide) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      }\n\n      _this._hideClone();\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'clone'\n      });\n    });\n    !fallback && toggleClass(dragEl, options.dragClass, true); // Set proper drop events\n\n    if (fallback) {\n      ignoreNextClick = true;\n      _this._loopId = setInterval(_this._emulateDragOver, 50);\n    } else {\n      // Undo what was set in _prepareDragStart before drag started\n      off(document, 'mouseup', _this._onDrop);\n      off(document, 'touchend', _this._onDrop);\n      off(document, 'touchcancel', _this._onDrop);\n\n      if (dataTransfer) {\n        dataTransfer.effectAllowed = 'move';\n        options.setData && options.setData.call(_this, dataTransfer, dragEl);\n      }\n\n      on(document, 'drop', _this); // #1276 fix:\n\n      css(dragEl, 'transform', 'translateZ(0)');\n    }\n\n    awaitingDragStarted = true;\n    _this._dragStartId = _nextTick(_this._dragStarted.bind(_this, fallback, evt));\n    on(document, 'selectstart', _this);\n    moved = true;\n\n    if (Safari) {\n      css(document.body, 'user-select', 'none');\n    }\n  },\n  // Returns true - if no further action is needed (either inserted or another condition)\n  _onDragOver: function _onDragOver(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        target = evt.target,\n        dragRect,\n        targetRect,\n        revert,\n        options = this.options,\n        group = options.group,\n        activeSortable = Sortable.active,\n        isOwner = activeGroup === group,\n        canSort = options.sort,\n        fromSortable = putSortable || activeSortable,\n        vertical,\n        _this = this,\n        completedFired = false;\n\n    if (_silent) return;\n\n    function dragOverEvent(name, extra) {\n      pluginEvent(name, _this, _objectSpread({\n        evt: evt,\n        isOwner: isOwner,\n        axis: vertical ? 'vertical' : 'horizontal',\n        revert: revert,\n        dragRect: dragRect,\n        targetRect: targetRect,\n        canSort: canSort,\n        fromSortable: fromSortable,\n        target: target,\n        completed: completed,\n        onMove: function onMove(target, after) {\n          return _onMove(rootEl, el, dragEl, dragRect, target, getRect(target), evt, after);\n        },\n        changed: changed\n      }, extra));\n    } // Capture animation state\n\n\n    function capture() {\n      dragOverEvent('dragOverAnimationCapture');\n\n      _this.captureAnimationState();\n\n      if (_this !== fromSortable) {\n        fromSortable.captureAnimationState();\n      }\n    } // Return invocation when dragEl is inserted (or completed)\n\n\n    function completed(insertion) {\n      dragOverEvent('dragOverCompleted', {\n        insertion: insertion\n      });\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        } else {\n          activeSortable._showClone(_this);\n        }\n\n        if (_this !== fromSortable) {\n          // Set ghost class to new sortable's ghost class\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : activeSortable.options.ghostClass, false);\n          toggleClass(dragEl, options.ghostClass, true);\n        }\n\n        if (putSortable !== _this && _this !== Sortable.active) {\n          putSortable = _this;\n        } else if (_this === Sortable.active && putSortable) {\n          putSortable = null;\n        } // Animation\n\n\n        if (fromSortable === _this) {\n          _this._ignoreWhileAnimating = target;\n        }\n\n        _this.animateAll(function () {\n          dragOverEvent('dragOverAnimationComplete');\n          _this._ignoreWhileAnimating = null;\n        });\n\n        if (_this !== fromSortable) {\n          fromSortable.animateAll();\n          fromSortable._ignoreWhileAnimating = null;\n        }\n      } // Null lastTarget if it is not inside a previously swapped element\n\n\n      if (target === dragEl && !dragEl.animated || target === el && !target.animated) {\n        lastTarget = null;\n      } // no bubbling and not fallback\n\n\n      if (!options.dragoverBubble && !evt.rootEl && target !== document) {\n        dragEl.parentNode[expando]._isOutsideThisEl(evt.target); // Do not detect for empty insert if already inserted\n\n\n        !insertion && nearestEmptyInsertDetectEvent(evt);\n      }\n\n      !options.dragoverBubble && evt.stopPropagation && evt.stopPropagation();\n      return completedFired = true;\n    } // Call when dragEl has been inserted\n\n\n    function changed() {\n      newIndex = index(dragEl);\n      newDraggableIndex = index(dragEl, options.draggable);\n\n      _dispatchEvent({\n        sortable: _this,\n        name: 'change',\n        toEl: el,\n        newIndex: newIndex,\n        newDraggableIndex: newDraggableIndex,\n        originalEvent: evt\n      });\n    }\n\n    if (evt.preventDefault !== void 0) {\n      evt.cancelable && evt.preventDefault();\n    }\n\n    target = closest(target, options.draggable, el, true);\n    dragOverEvent('dragOver');\n    if (Sortable.eventCanceled) return completedFired;\n\n    if (dragEl.contains(evt.target) || target.animated && target.animatingX && target.animatingY || _this._ignoreWhileAnimating === target) {\n      return completed(false);\n    }\n\n    ignoreNextClick = false;\n\n    if (activeSortable && !options.disabled && (isOwner ? canSort || (revert = !rootEl.contains(dragEl)) // Reverting item into the original list\n    : putSortable === this || (this.lastPutMode = activeGroup.checkPull(this, activeSortable, dragEl, evt)) && group.checkPut(this, activeSortable, dragEl, evt))) {\n      vertical = this._getDirection(evt, target) === 'vertical';\n      dragRect = getRect(dragEl);\n      dragOverEvent('dragOverValid');\n      if (Sortable.eventCanceled) return completedFired;\n\n      if (revert) {\n        parentEl = rootEl; // actualization\n\n        capture();\n\n        this._hideClone();\n\n        dragOverEvent('revert');\n\n        if (!Sortable.eventCanceled) {\n          if (nextEl) {\n            rootEl.insertBefore(dragEl, nextEl);\n          } else {\n            rootEl.appendChild(dragEl);\n          }\n        }\n\n        return completed(true);\n      }\n\n      var elLastChild = lastChild(el, options.draggable);\n\n      if (!elLastChild || _ghostIsLast(evt, vertical, this) && !elLastChild.animated) {\n        // If already at end of list: Do not insert\n        if (elLastChild === dragEl) {\n          return completed(false);\n        } // assign target only if condition is true\n\n\n        if (elLastChild && el === evt.target) {\n          target = elLastChild;\n        }\n\n        if (target) {\n          targetRect = getRect(target);\n        }\n\n        if (_onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, !!target) !== false) {\n          capture();\n          el.appendChild(dragEl);\n          parentEl = el; // actualization\n\n          changed();\n          return completed(true);\n        }\n      } else if (target.parentNode === el) {\n        targetRect = getRect(target);\n        var direction = 0,\n            targetBeforeFirstSwap,\n            differentLevel = dragEl.parentNode !== el,\n            differentRowCol = !_dragElInRowColumn(dragEl.animated && dragEl.toRect || dragRect, target.animated && target.toRect || targetRect, vertical),\n            side1 = vertical ? 'top' : 'left',\n            scrolledPastTop = isScrolledPast(target, 'top', 'top') || isScrolledPast(dragEl, 'top', 'top'),\n            scrollBefore = scrolledPastTop ? scrolledPastTop.scrollTop : void 0;\n\n        if (lastTarget !== target) {\n          targetBeforeFirstSwap = targetRect[side1];\n          pastFirstInvertThresh = false;\n          isCircumstantialInvert = !differentRowCol && options.invertSwap || differentLevel;\n        }\n\n        direction = _getSwapDirection(evt, target, targetRect, vertical, differentRowCol ? 1 : options.swapThreshold, options.invertedSwapThreshold == null ? options.swapThreshold : options.invertedSwapThreshold, isCircumstantialInvert, lastTarget === target);\n        var sibling;\n\n        if (direction !== 0) {\n          // Check if target is beside dragEl in respective direction (ignoring hidden elements)\n          var dragIndex = index(dragEl);\n\n          do {\n            dragIndex -= direction;\n            sibling = parentEl.children[dragIndex];\n          } while (sibling && (css(sibling, 'display') === 'none' || sibling === ghostEl));\n        } // If dragEl is already beside target: Do not insert\n\n\n        if (direction === 0 || sibling === target) {\n          return completed(false);\n        }\n\n        lastTarget = target;\n        lastDirection = direction;\n        var nextSibling = target.nextElementSibling,\n            after = false;\n        after = direction === 1;\n\n        var moveVector = _onMove(rootEl, el, dragEl, dragRect, target, targetRect, evt, after);\n\n        if (moveVector !== false) {\n          if (moveVector === 1 || moveVector === -1) {\n            after = moveVector === 1;\n          }\n\n          _silent = true;\n          setTimeout(_unsilent, 30);\n          capture();\n\n          if (after && !nextSibling) {\n            el.appendChild(dragEl);\n          } else {\n            target.parentNode.insertBefore(dragEl, after ? nextSibling : target);\n          } // Undo chrome's scroll adjustment (has no effect on other browsers)\n\n\n          if (scrolledPastTop) {\n            scrollBy(scrolledPastTop, 0, scrollBefore - scrolledPastTop.scrollTop);\n          }\n\n          parentEl = dragEl.parentNode; // actualization\n          // must be done before animation\n\n          if (targetBeforeFirstSwap !== undefined && !isCircumstantialInvert) {\n            targetMoveDistance = Math.abs(targetBeforeFirstSwap - getRect(target)[side1]);\n          }\n\n          changed();\n          return completed(true);\n        }\n      }\n\n      if (el.contains(dragEl)) {\n        return completed(false);\n      }\n    }\n\n    return false;\n  },\n  _ignoreWhileAnimating: null,\n  _offMoveEvents: function _offMoveEvents() {\n    off(document, 'mousemove', this._onTouchMove);\n    off(document, 'touchmove', this._onTouchMove);\n    off(document, 'pointermove', this._onTouchMove);\n    off(document, 'dragover', nearestEmptyInsertDetectEvent);\n    off(document, 'mousemove', nearestEmptyInsertDetectEvent);\n    off(document, 'touchmove', nearestEmptyInsertDetectEvent);\n  },\n  _offUpEvents: function _offUpEvents() {\n    var ownerDocument = this.el.ownerDocument;\n    off(ownerDocument, 'mouseup', this._onDrop);\n    off(ownerDocument, 'touchend', this._onDrop);\n    off(ownerDocument, 'pointerup', this._onDrop);\n    off(ownerDocument, 'touchcancel', this._onDrop);\n    off(document, 'selectstart', this);\n  },\n  _onDrop: function _onDrop(\n  /**Event*/\n  evt) {\n    var el = this.el,\n        options = this.options; // Get the index of the dragged element within its parent\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n    pluginEvent('drop', this, {\n      evt: evt\n    });\n    parentEl = dragEl && dragEl.parentNode; // Get again after plugin event\n\n    newIndex = index(dragEl);\n    newDraggableIndex = index(dragEl, options.draggable);\n\n    if (Sortable.eventCanceled) {\n      this._nulling();\n\n      return;\n    }\n\n    awaitingDragStarted = false;\n    isCircumstantialInvert = false;\n    pastFirstInvertThresh = false;\n    clearInterval(this._loopId);\n    clearTimeout(this._dragStartTimer);\n\n    _cancelNextTick(this.cloneId);\n\n    _cancelNextTick(this._dragStartId); // Unbind events\n\n\n    if (this.nativeDraggable) {\n      off(document, 'drop', this);\n      off(el, 'dragstart', this._onDragStart);\n    }\n\n    this._offMoveEvents();\n\n    this._offUpEvents();\n\n    if (Safari) {\n      css(document.body, 'user-select', '');\n    }\n\n    css(dragEl, 'transform', '');\n\n    if (evt) {\n      if (moved) {\n        evt.cancelable && evt.preventDefault();\n        !options.dropBubble && evt.stopPropagation();\n      }\n\n      ghostEl && ghostEl.parentNode && ghostEl.parentNode.removeChild(ghostEl);\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        // Remove clone(s)\n        cloneEl && cloneEl.parentNode && cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      if (dragEl) {\n        if (this.nativeDraggable) {\n          off(dragEl, 'dragend', this);\n        }\n\n        _disableDraggable(dragEl);\n\n        dragEl.style['will-change'] = ''; // Remove classes\n        // ghostClass is added in dragStarted\n\n        if (moved && !awaitingDragStarted) {\n          toggleClass(dragEl, putSortable ? putSortable.options.ghostClass : this.options.ghostClass, false);\n        }\n\n        toggleClass(dragEl, this.options.chosenClass, false); // Drag stop event\n\n        _dispatchEvent({\n          sortable: this,\n          name: 'unchoose',\n          toEl: parentEl,\n          newIndex: null,\n          newDraggableIndex: null,\n          originalEvent: evt\n        });\n\n        if (rootEl !== parentEl) {\n          if (newIndex >= 0) {\n            // Add event\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'add',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            }); // Remove event\n\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'remove',\n              toEl: parentEl,\n              originalEvent: evt\n            }); // drag from one list and drop into another\n\n\n            _dispatchEvent({\n              rootEl: parentEl,\n              name: 'sort',\n              toEl: parentEl,\n              fromEl: rootEl,\n              originalEvent: evt\n            });\n\n            _dispatchEvent({\n              sortable: this,\n              name: 'sort',\n              toEl: parentEl,\n              originalEvent: evt\n            });\n          }\n\n          putSortable && putSortable.save();\n        } else {\n          if (newIndex !== oldIndex) {\n            if (newIndex >= 0) {\n              // drag & drop within the same list\n              _dispatchEvent({\n                sortable: this,\n                name: 'update',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n\n              _dispatchEvent({\n                sortable: this,\n                name: 'sort',\n                toEl: parentEl,\n                originalEvent: evt\n              });\n            }\n          }\n        }\n\n        if (Sortable.active) {\n          /* jshint eqnull:true */\n          if (newIndex == null || newIndex === -1) {\n            newIndex = oldIndex;\n            newDraggableIndex = oldDraggableIndex;\n          }\n\n          _dispatchEvent({\n            sortable: this,\n            name: 'end',\n            toEl: parentEl,\n            originalEvent: evt\n          }); // Save sorting\n\n\n          this.save();\n        }\n      }\n    }\n\n    this._nulling();\n  },\n  _nulling: function _nulling() {\n    pluginEvent('nulling', this);\n    rootEl = dragEl = parentEl = ghostEl = nextEl = cloneEl = lastDownEl = cloneHidden = tapEvt = touchEvt = moved = newIndex = newDraggableIndex = oldIndex = oldDraggableIndex = lastTarget = lastDirection = putSortable = activeGroup = Sortable.dragged = Sortable.ghost = Sortable.clone = Sortable.active = null;\n    savedInputChecked.forEach(function (el) {\n      el.checked = true;\n    });\n    savedInputChecked.length = lastDx = lastDy = 0;\n  },\n  handleEvent: function handleEvent(\n  /**Event*/\n  evt) {\n    switch (evt.type) {\n      case 'drop':\n      case 'dragend':\n        this._onDrop(evt);\n\n        break;\n\n      case 'dragenter':\n      case 'dragover':\n        if (dragEl) {\n          this._onDragOver(evt);\n\n          _globalDragOver(evt);\n        }\n\n        break;\n\n      case 'selectstart':\n        evt.preventDefault();\n        break;\n    }\n  },\n\n  /**\n   * Serializes the item into an array of string.\n   * @returns {String[]}\n   */\n  toArray: function toArray() {\n    var order = [],\n        el,\n        children = this.el.children,\n        i = 0,\n        n = children.length,\n        options = this.options;\n\n    for (; i < n; i++) {\n      el = children[i];\n\n      if (closest(el, options.draggable, this.el, false)) {\n        order.push(el.getAttribute(options.dataIdAttr) || _generateId(el));\n      }\n    }\n\n    return order;\n  },\n\n  /**\n   * Sorts the elements according to the array.\n   * @param  {String[]}  order  order of the items\n   */\n  sort: function sort(order) {\n    var items = {},\n        rootEl = this.el;\n    this.toArray().forEach(function (id, i) {\n      var el = rootEl.children[i];\n\n      if (closest(el, this.options.draggable, rootEl, false)) {\n        items[id] = el;\n      }\n    }, this);\n    order.forEach(function (id) {\n      if (items[id]) {\n        rootEl.removeChild(items[id]);\n        rootEl.appendChild(items[id]);\n      }\n    });\n  },\n\n  /**\n   * Save the current sorting\n   */\n  save: function save() {\n    var store = this.options.store;\n    store && store.set && store.set(this);\n  },\n\n  /**\n   * For each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n   * @param   {HTMLElement}  el\n   * @param   {String}       [selector]  default: `options.draggable`\n   * @returns {HTMLElement|null}\n   */\n  closest: function closest$1(el, selector) {\n    return closest(el, selector || this.options.draggable, this.el, false);\n  },\n\n  /**\n   * Set/get option\n   * @param   {string} name\n   * @param   {*}      [value]\n   * @returns {*}\n   */\n  option: function option(name, value) {\n    var options = this.options;\n\n    if (value === void 0) {\n      return options[name];\n    } else {\n      var modifiedValue = PluginManager.modifyOption(this, name, value);\n\n      if (typeof modifiedValue !== 'undefined') {\n        options[name] = modifiedValue;\n      } else {\n        options[name] = value;\n      }\n\n      if (name === 'group') {\n        _prepareGroup(options);\n      }\n    }\n  },\n\n  /**\n   * Destroy\n   */\n  destroy: function destroy() {\n    pluginEvent('destroy', this);\n    var el = this.el;\n    el[expando] = null;\n    off(el, 'mousedown', this._onTapStart);\n    off(el, 'touchstart', this._onTapStart);\n    off(el, 'pointerdown', this._onTapStart);\n\n    if (this.nativeDraggable) {\n      off(el, 'dragover', this);\n      off(el, 'dragenter', this);\n    } // Remove draggable attributes\n\n\n    Array.prototype.forEach.call(el.querySelectorAll('[draggable]'), function (el) {\n      el.removeAttribute('draggable');\n    });\n\n    this._onDrop();\n\n    this._disableDelayedDragEvents();\n\n    sortables.splice(sortables.indexOf(this.el), 1);\n    this.el = el = null;\n  },\n  _hideClone: function _hideClone() {\n    if (!cloneHidden) {\n      pluginEvent('hideClone', this);\n      if (Sortable.eventCanceled) return;\n      css(cloneEl, 'display', 'none');\n\n      if (this.options.removeCloneOnHide && cloneEl.parentNode) {\n        cloneEl.parentNode.removeChild(cloneEl);\n      }\n\n      cloneHidden = true;\n    }\n  },\n  _showClone: function _showClone(putSortable) {\n    if (putSortable.lastPutMode !== 'clone') {\n      this._hideClone();\n\n      return;\n    }\n\n    if (cloneHidden) {\n      pluginEvent('showClone', this);\n      if (Sortable.eventCanceled) return; // show clone at dragEl or original position\n\n      if (rootEl.contains(dragEl) && !this.options.group.revertClone) {\n        rootEl.insertBefore(cloneEl, dragEl);\n      } else if (nextEl) {\n        rootEl.insertBefore(cloneEl, nextEl);\n      } else {\n        rootEl.appendChild(cloneEl);\n      }\n\n      if (this.options.group.revertClone) {\n        this.animate(dragEl, cloneEl);\n      }\n\n      css(cloneEl, 'display', '');\n      cloneHidden = false;\n    }\n  }\n};\n\nfunction _globalDragOver(\n/**Event*/\nevt) {\n  if (evt.dataTransfer) {\n    evt.dataTransfer.dropEffect = 'move';\n  }\n\n  evt.cancelable && evt.preventDefault();\n}\n\nfunction _onMove(fromEl, toEl, dragEl, dragRect, targetEl, targetRect, originalEvent, willInsertAfter) {\n  var evt,\n      sortable = fromEl[expando],\n      onMoveFn = sortable.options.onMove,\n      retVal; // Support for new CustomEvent feature\n\n  if (window.CustomEvent && !IE11OrLess && !Edge) {\n    evt = new CustomEvent('move', {\n      bubbles: true,\n      cancelable: true\n    });\n  } else {\n    evt = document.createEvent('Event');\n    evt.initEvent('move', true, true);\n  }\n\n  evt.to = toEl;\n  evt.from = fromEl;\n  evt.dragged = dragEl;\n  evt.draggedRect = dragRect;\n  evt.related = targetEl || toEl;\n  evt.relatedRect = targetRect || getRect(toEl);\n  evt.willInsertAfter = willInsertAfter;\n  evt.originalEvent = originalEvent;\n  fromEl.dispatchEvent(evt);\n\n  if (onMoveFn) {\n    retVal = onMoveFn.call(sortable, evt, originalEvent);\n  }\n\n  return retVal;\n}\n\nfunction _disableDraggable(el) {\n  el.draggable = false;\n}\n\nfunction _unsilent() {\n  _silent = false;\n}\n\nfunction _ghostIsLast(evt, vertical, sortable) {\n  var rect = getRect(lastChild(sortable.el, sortable.options.draggable));\n  var spacer = 10;\n  return vertical ? evt.clientX > rect.right + spacer || evt.clientX <= rect.right && evt.clientY > rect.bottom && evt.clientX >= rect.left : evt.clientX > rect.right && evt.clientY > rect.top || evt.clientX <= rect.right && evt.clientY > rect.bottom + spacer;\n}\n\nfunction _getSwapDirection(evt, target, targetRect, vertical, swapThreshold, invertedSwapThreshold, invertSwap, isLastTarget) {\n  var mouseOnAxis = vertical ? evt.clientY : evt.clientX,\n      targetLength = vertical ? targetRect.height : targetRect.width,\n      targetS1 = vertical ? targetRect.top : targetRect.left,\n      targetS2 = vertical ? targetRect.bottom : targetRect.right,\n      invert = false;\n\n  if (!invertSwap) {\n    // Never invert or create dragEl shadow when target movemenet causes mouse to move past the end of regular swapThreshold\n    if (isLastTarget && targetMoveDistance < targetLength * swapThreshold) {\n      // multiplied only by swapThreshold because mouse will already be inside target by (1 - threshold) * targetLength / 2\n      // check if past first invert threshold on side opposite of lastDirection\n      if (!pastFirstInvertThresh && (lastDirection === 1 ? mouseOnAxis > targetS1 + targetLength * invertedSwapThreshold / 2 : mouseOnAxis < targetS2 - targetLength * invertedSwapThreshold / 2)) {\n        // past first invert threshold, do not restrict inverted threshold to dragEl shadow\n        pastFirstInvertThresh = true;\n      }\n\n      if (!pastFirstInvertThresh) {\n        // dragEl shadow (target move distance shadow)\n        if (lastDirection === 1 ? mouseOnAxis < targetS1 + targetMoveDistance // over dragEl shadow\n        : mouseOnAxis > targetS2 - targetMoveDistance) {\n          return -lastDirection;\n        }\n      } else {\n        invert = true;\n      }\n    } else {\n      // Regular\n      if (mouseOnAxis > targetS1 + targetLength * (1 - swapThreshold) / 2 && mouseOnAxis < targetS2 - targetLength * (1 - swapThreshold) / 2) {\n        return _getInsertDirection(target);\n      }\n    }\n  }\n\n  invert = invert || invertSwap;\n\n  if (invert) {\n    // Invert of regular\n    if (mouseOnAxis < targetS1 + targetLength * invertedSwapThreshold / 2 || mouseOnAxis > targetS2 - targetLength * invertedSwapThreshold / 2) {\n      return mouseOnAxis > targetS1 + targetLength / 2 ? 1 : -1;\n    }\n  }\n\n  return 0;\n}\n/**\n * Gets the direction dragEl must be swapped relative to target in order to make it\n * seem that dragEl has been \"inserted\" into that element's position\n * @param  {HTMLElement} target       The target whose position dragEl is being inserted at\n * @return {Number}                   Direction dragEl must be swapped\n */\n\n\nfunction _getInsertDirection(target) {\n  if (index(dragEl) < index(target)) {\n    return 1;\n  } else {\n    return -1;\n  }\n}\n/**\n * Generate id\n * @param   {HTMLElement} el\n * @returns {String}\n * @private\n */\n\n\nfunction _generateId(el) {\n  var str = el.tagName + el.className + el.src + el.href + el.textContent,\n      i = str.length,\n      sum = 0;\n\n  while (i--) {\n    sum += str.charCodeAt(i);\n  }\n\n  return sum.toString(36);\n}\n\nfunction _saveInputCheckedState(root) {\n  savedInputChecked.length = 0;\n  var inputs = root.getElementsByTagName('input');\n  var idx = inputs.length;\n\n  while (idx--) {\n    var el = inputs[idx];\n    el.checked && savedInputChecked.push(el);\n  }\n}\n\nfunction _nextTick(fn) {\n  return setTimeout(fn, 0);\n}\n\nfunction _cancelNextTick(id) {\n  return clearTimeout(id);\n} // Fixed #973:\n\n\nif (documentExists) {\n  on(document, 'touchmove', function (evt) {\n    if ((Sortable.active || awaitingDragStarted) && evt.cancelable) {\n      evt.preventDefault();\n    }\n  });\n} // Export utils\n\n\nSortable.utils = {\n  on: on,\n  off: off,\n  css: css,\n  find: find,\n  is: function is(el, selector) {\n    return !!closest(el, selector, el, false);\n  },\n  extend: extend,\n  throttle: throttle,\n  closest: closest,\n  toggleClass: toggleClass,\n  clone: clone,\n  index: index,\n  nextTick: _nextTick,\n  cancelNextTick: _cancelNextTick,\n  detectDirection: _detectDirection,\n  getChild: getChild\n};\n/**\n * Get the Sortable instance of an element\n * @param  {HTMLElement} element The element\n * @return {Sortable|undefined}         The instance of Sortable\n */\n\nSortable.get = function (element) {\n  return element[expando];\n};\n/**\n * Mount a plugin to Sortable\n * @param  {...SortablePlugin|SortablePlugin[]} plugins       Plugins being mounted\n */\n\n\nSortable.mount = function () {\n  for (var _len = arguments.length, plugins = new Array(_len), _key = 0; _key < _len; _key++) {\n    plugins[_key] = arguments[_key];\n  }\n\n  if (plugins[0].constructor === Array) plugins = plugins[0];\n  plugins.forEach(function (plugin) {\n    if (!plugin.prototype || !plugin.prototype.constructor) {\n      throw \"Sortable: Mounted plugin must be a constructor function, not \".concat({}.toString.call(plugin));\n    }\n\n    if (plugin.utils) Sortable.utils = _objectSpread({}, Sortable.utils, plugin.utils);\n    PluginManager.mount(plugin);\n  });\n};\n/**\n * Create sortable instance\n * @param {HTMLElement}  el\n * @param {Object}      [options]\n */\n\n\nSortable.create = function (el, options) {\n  return new Sortable(el, options);\n}; // Export\n\n\nSortable.version = version;\n\nvar autoScrolls = [],\n    scrollEl,\n    scrollRootEl,\n    scrolling = false,\n    lastAutoScrollX,\n    lastAutoScrollY,\n    touchEvt$1,\n    pointerElemChangedInterval;\n\nfunction AutoScrollPlugin() {\n  function AutoScroll() {\n    this.defaults = {\n      scroll: true,\n      scrollSensitivity: 30,\n      scrollSpeed: 10,\n      bubbleScroll: true\n    }; // Bind all private methods\n\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n  }\n\n  AutoScroll.prototype = {\n    dragStarted: function dragStarted(_ref) {\n      var originalEvent = _ref.originalEvent;\n\n      if (this.sortable.nativeDraggable) {\n        on(document, 'dragover', this._handleAutoScroll);\n      } else {\n        if (this.options.supportPointer) {\n          on(document, 'pointermove', this._handleFallbackAutoScroll);\n        } else if (originalEvent.touches) {\n          on(document, 'touchmove', this._handleFallbackAutoScroll);\n        } else {\n          on(document, 'mousemove', this._handleFallbackAutoScroll);\n        }\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref2) {\n      var originalEvent = _ref2.originalEvent;\n\n      // For when bubbling is canceled and using fallback (fallback 'touchmove' always reached)\n      if (!this.options.dragOverBubble && !originalEvent.rootEl) {\n        this._handleAutoScroll(originalEvent);\n      }\n    },\n    drop: function drop() {\n      if (this.sortable.nativeDraggable) {\n        off(document, 'dragover', this._handleAutoScroll);\n      } else {\n        off(document, 'pointermove', this._handleFallbackAutoScroll);\n        off(document, 'touchmove', this._handleFallbackAutoScroll);\n        off(document, 'mousemove', this._handleFallbackAutoScroll);\n      }\n\n      clearPointerElemChangedInterval();\n      clearAutoScrolls();\n      cancelThrottle();\n    },\n    nulling: function nulling() {\n      touchEvt$1 = scrollRootEl = scrollEl = scrolling = pointerElemChangedInterval = lastAutoScrollX = lastAutoScrollY = null;\n      autoScrolls.length = 0;\n    },\n    _handleFallbackAutoScroll: function _handleFallbackAutoScroll(evt) {\n      this._handleAutoScroll(evt, true);\n    },\n    _handleAutoScroll: function _handleAutoScroll(evt, fallback) {\n      var _this = this;\n\n      var x = (evt.touches ? evt.touches[0] : evt).clientX,\n          y = (evt.touches ? evt.touches[0] : evt).clientY,\n          elem = document.elementFromPoint(x, y);\n      touchEvt$1 = evt; // IE does not seem to have native autoscroll,\n      // Edge's autoscroll seems too conditional,\n      // MACOS Safari does not have autoscroll,\n      // Firefox and Chrome are good\n\n      if (fallback || Edge || IE11OrLess || Safari) {\n        autoScroll(evt, this.options, elem, fallback); // Listener for pointer element change\n\n        var ogElemScroller = getParentAutoScrollElement(elem, true);\n\n        if (scrolling && (!pointerElemChangedInterval || x !== lastAutoScrollX || y !== lastAutoScrollY)) {\n          pointerElemChangedInterval && clearPointerElemChangedInterval(); // Detect for pointer elem change, emulating native DnD behaviour\n\n          pointerElemChangedInterval = setInterval(function () {\n            var newElem = getParentAutoScrollElement(document.elementFromPoint(x, y), true);\n\n            if (newElem !== ogElemScroller) {\n              ogElemScroller = newElem;\n              clearAutoScrolls();\n            }\n\n            autoScroll(evt, _this.options, newElem, fallback);\n          }, 10);\n          lastAutoScrollX = x;\n          lastAutoScrollY = y;\n        }\n      } else {\n        // if DnD is enabled (and browser has good autoscrolling), first autoscroll will already scroll, so get parent autoscroll of first autoscroll\n        if (!this.options.bubbleScroll || getParentAutoScrollElement(elem, true) === getWindowScrollingElement()) {\n          clearAutoScrolls();\n          return;\n        }\n\n        autoScroll(evt, this.options, getParentAutoScrollElement(elem, false), false);\n      }\n    }\n  };\n  return _extends(AutoScroll, {\n    pluginName: 'scroll',\n    initializeByDefault: true\n  });\n}\n\nfunction clearAutoScrolls() {\n  autoScrolls.forEach(function (autoScroll) {\n    clearInterval(autoScroll.pid);\n  });\n  autoScrolls = [];\n}\n\nfunction clearPointerElemChangedInterval() {\n  clearInterval(pointerElemChangedInterval);\n}\n\nvar autoScroll = throttle(function (evt, options, rootEl, isFallback) {\n  // Bug: https://bugzilla.mozilla.org/show_bug.cgi?id=505521\n  if (!options.scroll) return;\n  var x = (evt.touches ? evt.touches[0] : evt).clientX,\n      y = (evt.touches ? evt.touches[0] : evt).clientY,\n      sens = options.scrollSensitivity,\n      speed = options.scrollSpeed,\n      winScroller = getWindowScrollingElement();\n  var scrollThisInstance = false,\n      scrollCustomFn; // New scroll root, set scrollEl\n\n  if (scrollRootEl !== rootEl) {\n    scrollRootEl = rootEl;\n    clearAutoScrolls();\n    scrollEl = options.scroll;\n    scrollCustomFn = options.scrollFn;\n\n    if (scrollEl === true) {\n      scrollEl = getParentAutoScrollElement(rootEl, true);\n    }\n  }\n\n  var layersOut = 0;\n  var currentParent = scrollEl;\n\n  do {\n    var el = currentParent,\n        rect = getRect(el),\n        top = rect.top,\n        bottom = rect.bottom,\n        left = rect.left,\n        right = rect.right,\n        width = rect.width,\n        height = rect.height,\n        canScrollX = void 0,\n        canScrollY = void 0,\n        scrollWidth = el.scrollWidth,\n        scrollHeight = el.scrollHeight,\n        elCSS = css(el),\n        scrollPosX = el.scrollLeft,\n        scrollPosY = el.scrollTop;\n\n    if (el === winScroller) {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll' || elCSS.overflowX === 'visible');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll' || elCSS.overflowY === 'visible');\n    } else {\n      canScrollX = width < scrollWidth && (elCSS.overflowX === 'auto' || elCSS.overflowX === 'scroll');\n      canScrollY = height < scrollHeight && (elCSS.overflowY === 'auto' || elCSS.overflowY === 'scroll');\n    }\n\n    var vx = canScrollX && (Math.abs(right - x) <= sens && scrollPosX + width < scrollWidth) - (Math.abs(left - x) <= sens && !!scrollPosX);\n    var vy = canScrollY && (Math.abs(bottom - y) <= sens && scrollPosY + height < scrollHeight) - (Math.abs(top - y) <= sens && !!scrollPosY);\n\n    if (!autoScrolls[layersOut]) {\n      for (var i = 0; i <= layersOut; i++) {\n        if (!autoScrolls[i]) {\n          autoScrolls[i] = {};\n        }\n      }\n    }\n\n    if (autoScrolls[layersOut].vx != vx || autoScrolls[layersOut].vy != vy || autoScrolls[layersOut].el !== el) {\n      autoScrolls[layersOut].el = el;\n      autoScrolls[layersOut].vx = vx;\n      autoScrolls[layersOut].vy = vy;\n      clearInterval(autoScrolls[layersOut].pid);\n\n      if (vx != 0 || vy != 0) {\n        scrollThisInstance = true;\n        /* jshint loopfunc:true */\n\n        autoScrolls[layersOut].pid = setInterval(function () {\n          // emulate drag over during autoscroll (fallback), emulating native DnD behaviour\n          if (isFallback && this.layer === 0) {\n            Sortable.active._onTouchMove(touchEvt$1); // To move ghost if it is positioned absolutely\n\n          }\n\n          var scrollOffsetY = autoScrolls[this.layer].vy ? autoScrolls[this.layer].vy * speed : 0;\n          var scrollOffsetX = autoScrolls[this.layer].vx ? autoScrolls[this.layer].vx * speed : 0;\n\n          if (typeof scrollCustomFn === 'function') {\n            if (scrollCustomFn.call(Sortable.dragged.parentNode[expando], scrollOffsetX, scrollOffsetY, evt, touchEvt$1, autoScrolls[this.layer].el) !== 'continue') {\n              return;\n            }\n          }\n\n          scrollBy(autoScrolls[this.layer].el, scrollOffsetX, scrollOffsetY);\n        }.bind({\n          layer: layersOut\n        }), 24);\n      }\n    }\n\n    layersOut++;\n  } while (options.bubbleScroll && currentParent !== winScroller && (currentParent = getParentAutoScrollElement(currentParent, false)));\n\n  scrolling = scrollThisInstance; // in case another function catches scrolling as false in between when it is not\n}, 30);\n\nvar drop = function drop(_ref) {\n  var originalEvent = _ref.originalEvent,\n      putSortable = _ref.putSortable,\n      dragEl = _ref.dragEl,\n      activeSortable = _ref.activeSortable,\n      dispatchSortableEvent = _ref.dispatchSortableEvent,\n      hideGhostForTarget = _ref.hideGhostForTarget,\n      unhideGhostForTarget = _ref.unhideGhostForTarget;\n  if (!originalEvent) return;\n  var toSortable = putSortable || activeSortable;\n  hideGhostForTarget();\n  var touch = originalEvent.changedTouches && originalEvent.changedTouches.length ? originalEvent.changedTouches[0] : originalEvent;\n  var target = document.elementFromPoint(touch.clientX, touch.clientY);\n  unhideGhostForTarget();\n\n  if (toSortable && !toSortable.el.contains(target)) {\n    dispatchSortableEvent('spill');\n    this.onSpill({\n      dragEl: dragEl,\n      putSortable: putSortable\n    });\n  }\n};\n\nfunction Revert() {}\n\nRevert.prototype = {\n  startIndex: null,\n  dragStart: function dragStart(_ref2) {\n    var oldDraggableIndex = _ref2.oldDraggableIndex;\n    this.startIndex = oldDraggableIndex;\n  },\n  onSpill: function onSpill(_ref3) {\n    var dragEl = _ref3.dragEl,\n        putSortable = _ref3.putSortable;\n    this.sortable.captureAnimationState();\n\n    if (putSortable) {\n      putSortable.captureAnimationState();\n    }\n\n    var nextSibling = getChild(this.sortable.el, this.startIndex, this.options);\n\n    if (nextSibling) {\n      this.sortable.el.insertBefore(dragEl, nextSibling);\n    } else {\n      this.sortable.el.appendChild(dragEl);\n    }\n\n    this.sortable.animateAll();\n\n    if (putSortable) {\n      putSortable.animateAll();\n    }\n  },\n  drop: drop\n};\n\n_extends(Revert, {\n  pluginName: 'revertOnSpill'\n});\n\nfunction Remove() {}\n\nRemove.prototype = {\n  onSpill: function onSpill(_ref4) {\n    var dragEl = _ref4.dragEl,\n        putSortable = _ref4.putSortable;\n    var parentSortable = putSortable || this.sortable;\n    parentSortable.captureAnimationState();\n    dragEl.parentNode && dragEl.parentNode.removeChild(dragEl);\n    parentSortable.animateAll();\n  },\n  drop: drop\n};\n\n_extends(Remove, {\n  pluginName: 'removeOnSpill'\n});\n\nvar OnSpill = [Remove, Revert];\n\nvar lastSwapEl;\n\nfunction SwapPlugin() {\n  function Swap() {\n    this.defaults = {\n      swapClass: 'sortable-swap-highlight'\n    };\n  }\n\n  Swap.prototype = {\n    dragStart: function dragStart(_ref) {\n      var dragEl = _ref.dragEl;\n      lastSwapEl = dragEl;\n    },\n    dragOverValid: function dragOverValid(_ref2) {\n      var completed = _ref2.completed,\n          target = _ref2.target,\n          onMove = _ref2.onMove,\n          activeSortable = _ref2.activeSortable,\n          changed = _ref2.changed,\n          cancel = _ref2.cancel;\n      if (!activeSortable.options.swap) return;\n      var el = this.sortable.el,\n          options = this.options;\n\n      if (target && target !== el) {\n        var prevSwapEl = lastSwapEl;\n\n        if (onMove(target) !== false) {\n          toggleClass(target, options.swapClass, true);\n          lastSwapEl = target;\n        } else {\n          lastSwapEl = null;\n        }\n\n        if (prevSwapEl && prevSwapEl !== lastSwapEl) {\n          toggleClass(prevSwapEl, options.swapClass, false);\n        }\n      }\n\n      changed();\n      completed(true);\n      cancel();\n    },\n    drop: function drop(_ref3) {\n      var activeSortable = _ref3.activeSortable,\n          putSortable = _ref3.putSortable,\n          dragEl = _ref3.dragEl;\n      var toSortable = putSortable || this.sortable;\n      var options = this.options;\n      lastSwapEl && toggleClass(lastSwapEl, options.swapClass, false);\n\n      if (lastSwapEl && (options.swap || putSortable && putSortable.options.swap)) {\n        if (dragEl !== lastSwapEl) {\n          toSortable.captureAnimationState();\n          if (toSortable !== activeSortable) activeSortable.captureAnimationState();\n          swapNodes(dragEl, lastSwapEl);\n          toSortable.animateAll();\n          if (toSortable !== activeSortable) activeSortable.animateAll();\n        }\n      }\n    },\n    nulling: function nulling() {\n      lastSwapEl = null;\n    }\n  };\n  return _extends(Swap, {\n    pluginName: 'swap',\n    eventProperties: function eventProperties() {\n      return {\n        swapItem: lastSwapEl\n      };\n    }\n  });\n}\n\nfunction swapNodes(n1, n2) {\n  var p1 = n1.parentNode,\n      p2 = n2.parentNode,\n      i1,\n      i2;\n  if (!p1 || !p2 || p1.isEqualNode(n2) || p2.isEqualNode(n1)) return;\n  i1 = index(n1);\n  i2 = index(n2);\n\n  if (p1.isEqualNode(p2) && i1 < i2) {\n    i2++;\n  }\n\n  p1.insertBefore(n2, p1.children[i1]);\n  p2.insertBefore(n1, p2.children[i2]);\n}\n\nvar multiDragElements = [],\n    multiDragClones = [],\n    lastMultiDragSelect,\n    // for selection with modifier key down (SHIFT)\nmultiDragSortable,\n    initialFolding = false,\n    // Initial multi-drag fold when drag started\nfolding = false,\n    // Folding any other time\ndragStarted = false,\n    dragEl$1,\n    clonesFromRect,\n    clonesHidden;\n\nfunction MultiDragPlugin() {\n  function MultiDrag(sortable) {\n    // Bind all private methods\n    for (var fn in this) {\n      if (fn.charAt(0) === '_' && typeof this[fn] === 'function') {\n        this[fn] = this[fn].bind(this);\n      }\n    }\n\n    if (sortable.options.supportPointer) {\n      on(document, 'pointerup', this._deselectMultiDrag);\n    } else {\n      on(document, 'mouseup', this._deselectMultiDrag);\n      on(document, 'touchend', this._deselectMultiDrag);\n    }\n\n    on(document, 'keydown', this._checkKeyDown);\n    on(document, 'keyup', this._checkKeyUp);\n    this.defaults = {\n      selectedClass: 'sortable-selected',\n      multiDragKey: null,\n      setData: function setData(dataTransfer, dragEl) {\n        var data = '';\n\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          multiDragElements.forEach(function (multiDragElement, i) {\n            data += (!i ? '' : ', ') + multiDragElement.textContent;\n          });\n        } else {\n          data = dragEl.textContent;\n        }\n\n        dataTransfer.setData('Text', data);\n      }\n    };\n  }\n\n  MultiDrag.prototype = {\n    multiDragKeyDown: false,\n    isMultiDrag: false,\n    delayStartGlobal: function delayStartGlobal(_ref) {\n      var dragged = _ref.dragEl;\n      dragEl$1 = dragged;\n    },\n    delayEnded: function delayEnded() {\n      this.isMultiDrag = ~multiDragElements.indexOf(dragEl$1);\n    },\n    setupClone: function setupClone(_ref2) {\n      var sortable = _ref2.sortable,\n          cancel = _ref2.cancel;\n      if (!this.isMultiDrag) return;\n\n      for (var i = 0; i < multiDragElements.length; i++) {\n        multiDragClones.push(clone(multiDragElements[i]));\n        multiDragClones[i].sortableIndex = multiDragElements[i].sortableIndex;\n        multiDragClones[i].draggable = false;\n        multiDragClones[i].style['will-change'] = '';\n        toggleClass(multiDragClones[i], this.options.selectedClass, false);\n        multiDragElements[i] === dragEl$1 && toggleClass(multiDragClones[i], this.options.chosenClass, false);\n      }\n\n      sortable._hideClone();\n\n      cancel();\n    },\n    clone: function clone(_ref3) {\n      var sortable = _ref3.sortable,\n          rootEl = _ref3.rootEl,\n          dispatchSortableEvent = _ref3.dispatchSortableEvent,\n          cancel = _ref3.cancel;\n      if (!this.isMultiDrag) return;\n\n      if (!this.options.removeCloneOnHide) {\n        if (multiDragElements.length && multiDragSortable === sortable) {\n          insertMultiDragClones(true, rootEl);\n          dispatchSortableEvent('clone');\n          cancel();\n        }\n      }\n    },\n    showClone: function showClone(_ref4) {\n      var cloneNowShown = _ref4.cloneNowShown,\n          rootEl = _ref4.rootEl,\n          cancel = _ref4.cancel;\n      if (!this.isMultiDrag) return;\n      insertMultiDragClones(false, rootEl);\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', '');\n      });\n      cloneNowShown();\n      clonesHidden = false;\n      cancel();\n    },\n    hideClone: function hideClone(_ref5) {\n      var _this = this;\n\n      var sortable = _ref5.sortable,\n          cloneNowHidden = _ref5.cloneNowHidden,\n          cancel = _ref5.cancel;\n      if (!this.isMultiDrag) return;\n      multiDragClones.forEach(function (clone) {\n        css(clone, 'display', 'none');\n\n        if (_this.options.removeCloneOnHide && clone.parentNode) {\n          clone.parentNode.removeChild(clone);\n        }\n      });\n      cloneNowHidden();\n      clonesHidden = true;\n      cancel();\n    },\n    dragStartGlobal: function dragStartGlobal(_ref6) {\n      var sortable = _ref6.sortable;\n\n      if (!this.isMultiDrag && multiDragSortable) {\n        multiDragSortable.multiDrag._deselectMultiDrag();\n      }\n\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.sortableIndex = index(multiDragElement);\n      }); // Sort multi-drag elements\n\n      multiDragElements = multiDragElements.sort(function (a, b) {\n        return a.sortableIndex - b.sortableIndex;\n      });\n      dragStarted = true;\n    },\n    dragStarted: function dragStarted(_ref7) {\n      var _this2 = this;\n\n      var sortable = _ref7.sortable;\n      if (!this.isMultiDrag) return;\n\n      if (this.options.sort) {\n        // Capture rects,\n        // hide multi drag elements (by positioning them absolute),\n        // set multi drag elements rects to dragRect,\n        // show multi drag elements,\n        // animate to rects,\n        // unset rects & remove from DOM\n        sortable.captureAnimationState();\n\n        if (this.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            css(multiDragElement, 'position', 'absolute');\n          });\n          var dragRect = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRect);\n          });\n          folding = true;\n          initialFolding = true;\n        }\n      }\n\n      sortable.animateAll(function () {\n        folding = false;\n        initialFolding = false;\n\n        if (_this2.options.animation) {\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n        } // Remove all auxiliary multidrag items from el, if sorting enabled\n\n\n        if (_this2.options.sort) {\n          removeMultiDragElements();\n        }\n      });\n    },\n    dragOver: function dragOver(_ref8) {\n      var target = _ref8.target,\n          completed = _ref8.completed,\n          cancel = _ref8.cancel;\n\n      if (folding && ~multiDragElements.indexOf(target)) {\n        completed(false);\n        cancel();\n      }\n    },\n    revert: function revert(_ref9) {\n      var fromSortable = _ref9.fromSortable,\n          rootEl = _ref9.rootEl,\n          sortable = _ref9.sortable,\n          dragRect = _ref9.dragRect;\n\n      if (multiDragElements.length > 1) {\n        // Setup unfold animation\n        multiDragElements.forEach(function (multiDragElement) {\n          sortable.addAnimationState({\n            target: multiDragElement,\n            rect: folding ? getRect(multiDragElement) : dragRect\n          });\n          unsetRect(multiDragElement);\n          multiDragElement.fromRect = dragRect;\n          fromSortable.removeAnimationState(multiDragElement);\n        });\n        folding = false;\n        insertMultiDragElements(!this.options.removeCloneOnHide, rootEl);\n      }\n    },\n    dragOverCompleted: function dragOverCompleted(_ref10) {\n      var sortable = _ref10.sortable,\n          isOwner = _ref10.isOwner,\n          insertion = _ref10.insertion,\n          activeSortable = _ref10.activeSortable,\n          parentEl = _ref10.parentEl,\n          putSortable = _ref10.putSortable;\n      var options = this.options;\n\n      if (insertion) {\n        // Clones must be hidden before folding animation to capture dragRectAbsolute properly\n        if (isOwner) {\n          activeSortable._hideClone();\n        }\n\n        initialFolding = false; // If leaving sort:false root, or already folding - Fold to new location\n\n        if (options.animation && multiDragElements.length > 1 && (folding || !isOwner && !activeSortable.options.sort && !putSortable)) {\n          // Fold: Set all multi drag elements's rects to dragEl's rect when multi-drag elements are invisible\n          var dragRectAbsolute = getRect(dragEl$1, false, true, true);\n          multiDragElements.forEach(function (multiDragElement) {\n            if (multiDragElement === dragEl$1) return;\n            setRect(multiDragElement, dragRectAbsolute); // Move element(s) to end of parentEl so that it does not interfere with multi-drag clones insertion if they are inserted\n            // while folding, and so that we can capture them again because old sortable will no longer be fromSortable\n\n            parentEl.appendChild(multiDragElement);\n          });\n          folding = true;\n        } // Clones must be shown (and check to remove multi drags) after folding when interfering multiDragElements are moved out\n\n\n        if (!isOwner) {\n          // Only remove if not folding (folding will remove them anyways)\n          if (!folding) {\n            removeMultiDragElements();\n          }\n\n          if (multiDragElements.length > 1) {\n            var clonesHiddenBefore = clonesHidden;\n\n            activeSortable._showClone(sortable); // Unfold animation for clones if showing from hidden\n\n\n            if (activeSortable.options.animation && !clonesHidden && clonesHiddenBefore) {\n              multiDragClones.forEach(function (clone) {\n                activeSortable.addAnimationState({\n                  target: clone,\n                  rect: clonesFromRect\n                });\n                clone.fromRect = clonesFromRect;\n                clone.thisAnimationDuration = null;\n              });\n            }\n          } else {\n            activeSortable._showClone(sortable);\n          }\n        }\n      }\n    },\n    dragOverAnimationCapture: function dragOverAnimationCapture(_ref11) {\n      var dragRect = _ref11.dragRect,\n          isOwner = _ref11.isOwner,\n          activeSortable = _ref11.activeSortable;\n      multiDragElements.forEach(function (multiDragElement) {\n        multiDragElement.thisAnimationDuration = null;\n      });\n\n      if (activeSortable.options.animation && !isOwner && activeSortable.multiDrag.isMultiDrag) {\n        clonesFromRect = _extends({}, dragRect);\n        var dragMatrix = matrix(dragEl$1, true);\n        clonesFromRect.top -= dragMatrix.f;\n        clonesFromRect.left -= dragMatrix.e;\n      }\n    },\n    dragOverAnimationComplete: function dragOverAnimationComplete() {\n      if (folding) {\n        folding = false;\n        removeMultiDragElements();\n      }\n    },\n    drop: function drop(_ref12) {\n      var evt = _ref12.originalEvent,\n          rootEl = _ref12.rootEl,\n          parentEl = _ref12.parentEl,\n          sortable = _ref12.sortable,\n          dispatchSortableEvent = _ref12.dispatchSortableEvent,\n          oldIndex = _ref12.oldIndex,\n          putSortable = _ref12.putSortable;\n      var toSortable = putSortable || this.sortable;\n      if (!evt) return;\n      var options = this.options,\n          children = parentEl.children; // Multi-drag selection\n\n      if (!dragStarted) {\n        if (options.multiDragKey && !this.multiDragKeyDown) {\n          this._deselectMultiDrag();\n        }\n\n        toggleClass(dragEl$1, options.selectedClass, !~multiDragElements.indexOf(dragEl$1));\n\n        if (!~multiDragElements.indexOf(dragEl$1)) {\n          multiDragElements.push(dragEl$1);\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'select',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          }); // Modifier activated, select from last to dragEl\n\n          if (evt.shiftKey && lastMultiDragSelect && sortable.el.contains(lastMultiDragSelect)) {\n            var lastIndex = index(lastMultiDragSelect),\n                currentIndex = index(dragEl$1);\n\n            if (~lastIndex && ~currentIndex && lastIndex !== currentIndex) {\n              // Must include lastMultiDragSelect (select it), in case modified selection from no selection\n              // (but previous selection existed)\n              var n, i;\n\n              if (currentIndex > lastIndex) {\n                i = lastIndex;\n                n = currentIndex;\n              } else {\n                i = currentIndex;\n                n = lastIndex + 1;\n              }\n\n              for (; i < n; i++) {\n                if (~multiDragElements.indexOf(children[i])) continue;\n                toggleClass(children[i], options.selectedClass, true);\n                multiDragElements.push(children[i]);\n                dispatchEvent({\n                  sortable: sortable,\n                  rootEl: rootEl,\n                  name: 'select',\n                  targetEl: children[i],\n                  originalEvt: evt\n                });\n              }\n            }\n          } else {\n            lastMultiDragSelect = dragEl$1;\n          }\n\n          multiDragSortable = toSortable;\n        } else {\n          multiDragElements.splice(multiDragElements.indexOf(dragEl$1), 1);\n          lastMultiDragSelect = null;\n          dispatchEvent({\n            sortable: sortable,\n            rootEl: rootEl,\n            name: 'deselect',\n            targetEl: dragEl$1,\n            originalEvt: evt\n          });\n        }\n      } // Multi-drag drop\n\n\n      if (dragStarted && this.isMultiDrag) {\n        // Do not \"unfold\" after around dragEl if reverted\n        if ((parentEl[expando].options.sort || parentEl !== rootEl) && multiDragElements.length > 1) {\n          var dragRect = getRect(dragEl$1),\n              multiDragIndex = index(dragEl$1, ':not(.' + this.options.selectedClass + ')');\n          if (!initialFolding && options.animation) dragEl$1.thisAnimationDuration = null;\n          toSortable.captureAnimationState();\n\n          if (!initialFolding) {\n            if (options.animation) {\n              dragEl$1.fromRect = dragRect;\n              multiDragElements.forEach(function (multiDragElement) {\n                multiDragElement.thisAnimationDuration = null;\n\n                if (multiDragElement !== dragEl$1) {\n                  var rect = folding ? getRect(multiDragElement) : dragRect;\n                  multiDragElement.fromRect = rect; // Prepare unfold animation\n\n                  toSortable.addAnimationState({\n                    target: multiDragElement,\n                    rect: rect\n                  });\n                }\n              });\n            } // Multi drag elements are not necessarily removed from the DOM on drop, so to reinsert\n            // properly they must all be removed\n\n\n            removeMultiDragElements();\n            multiDragElements.forEach(function (multiDragElement) {\n              if (children[multiDragIndex]) {\n                parentEl.insertBefore(multiDragElement, children[multiDragIndex]);\n              } else {\n                parentEl.appendChild(multiDragElement);\n              }\n\n              multiDragIndex++;\n            }); // If initial folding is done, the elements may have changed position because they are now\n            // unfolding around dragEl, even though dragEl may not have his index changed, so update event\n            // must be fired here as Sortable will not.\n\n            if (oldIndex === index(dragEl$1)) {\n              var update = false;\n              multiDragElements.forEach(function (multiDragElement) {\n                if (multiDragElement.sortableIndex !== index(multiDragElement)) {\n                  update = true;\n                  return;\n                }\n              });\n\n              if (update) {\n                dispatchSortableEvent('update');\n              }\n            }\n          } // Must be done after capturing individual rects (scroll bar)\n\n\n          multiDragElements.forEach(function (multiDragElement) {\n            unsetRect(multiDragElement);\n          });\n          toSortable.animateAll();\n        }\n\n        multiDragSortable = toSortable;\n      } // Remove clones if necessary\n\n\n      if (rootEl === parentEl || putSortable && putSortable.lastPutMode !== 'clone') {\n        multiDragClones.forEach(function (clone) {\n          clone.parentNode && clone.parentNode.removeChild(clone);\n        });\n      }\n    },\n    nullingGlobal: function nullingGlobal() {\n      this.isMultiDrag = dragStarted = false;\n      multiDragClones.length = 0;\n    },\n    destroyGlobal: function destroyGlobal() {\n      this._deselectMultiDrag();\n\n      off(document, 'pointerup', this._deselectMultiDrag);\n      off(document, 'mouseup', this._deselectMultiDrag);\n      off(document, 'touchend', this._deselectMultiDrag);\n      off(document, 'keydown', this._checkKeyDown);\n      off(document, 'keyup', this._checkKeyUp);\n    },\n    _deselectMultiDrag: function _deselectMultiDrag(evt) {\n      if (typeof dragStarted !== \"undefined\" && dragStarted) return; // Only deselect if selection is in this sortable\n\n      if (multiDragSortable !== this.sortable) return; // Only deselect if target is not item in this sortable\n\n      if (evt && closest(evt.target, this.options.draggable, this.sortable.el, false)) return; // Only deselect if left click\n\n      if (evt && evt.button !== 0) return;\n\n      while (multiDragElements.length) {\n        var el = multiDragElements[0];\n        toggleClass(el, this.options.selectedClass, false);\n        multiDragElements.shift();\n        dispatchEvent({\n          sortable: this.sortable,\n          rootEl: this.sortable.el,\n          name: 'deselect',\n          targetEl: el,\n          originalEvt: evt\n        });\n      }\n    },\n    _checkKeyDown: function _checkKeyDown(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = true;\n      }\n    },\n    _checkKeyUp: function _checkKeyUp(evt) {\n      if (evt.key === this.options.multiDragKey) {\n        this.multiDragKeyDown = false;\n      }\n    }\n  };\n  return _extends(MultiDrag, {\n    // Static methods & properties\n    pluginName: 'multiDrag',\n    utils: {\n      /**\r\n       * Selects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be selected\r\n       */\n      select: function select(el) {\n        var sortable = el.parentNode[expando];\n        if (!sortable || !sortable.options.multiDrag || ~multiDragElements.indexOf(el)) return;\n\n        if (multiDragSortable && multiDragSortable !== sortable) {\n          multiDragSortable.multiDrag._deselectMultiDrag();\n\n          multiDragSortable = sortable;\n        }\n\n        toggleClass(el, sortable.options.selectedClass, true);\n        multiDragElements.push(el);\n      },\n\n      /**\r\n       * Deselects the provided multi-drag item\r\n       * @param  {HTMLElement} el    The element to be deselected\r\n       */\n      deselect: function deselect(el) {\n        var sortable = el.parentNode[expando],\n            index = multiDragElements.indexOf(el);\n        if (!sortable || !sortable.options.multiDrag || !~index) return;\n        toggleClass(el, sortable.options.selectedClass, false);\n        multiDragElements.splice(index, 1);\n      }\n    },\n    eventProperties: function eventProperties() {\n      var _this3 = this;\n\n      var oldIndicies = [],\n          newIndicies = [];\n      multiDragElements.forEach(function (multiDragElement) {\n        oldIndicies.push({\n          multiDragElement: multiDragElement,\n          index: multiDragElement.sortableIndex\n        }); // multiDragElements will already be sorted if folding\n\n        var newIndex;\n\n        if (folding && multiDragElement !== dragEl$1) {\n          newIndex = -1;\n        } else if (folding) {\n          newIndex = index(multiDragElement, ':not(.' + _this3.options.selectedClass + ')');\n        } else {\n          newIndex = index(multiDragElement);\n        }\n\n        newIndicies.push({\n          multiDragElement: multiDragElement,\n          index: newIndex\n        });\n      });\n      return {\n        items: _toConsumableArray(multiDragElements),\n        clones: [].concat(multiDragClones),\n        oldIndicies: oldIndicies,\n        newIndicies: newIndicies\n      };\n    },\n    optionListeners: {\n      multiDragKey: function multiDragKey(key) {\n        key = key.toLowerCase();\n\n        if (key === 'ctrl') {\n          key = 'Control';\n        } else if (key.length > 1) {\n          key = key.charAt(0).toUpperCase() + key.substr(1);\n        }\n\n        return key;\n      }\n    }\n  });\n}\n\nfunction insertMultiDragElements(clonesInserted, rootEl) {\n  multiDragElements.forEach(function (multiDragElement, i) {\n    var target = rootEl.children[multiDragElement.sortableIndex + (clonesInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(multiDragElement, target);\n    } else {\n      rootEl.appendChild(multiDragElement);\n    }\n  });\n}\n/**\r\n * Insert multi-drag clones\r\n * @param  {[Boolean]} elementsInserted  Whether the multi-drag elements are inserted\r\n * @param  {HTMLElement} rootEl\r\n */\n\n\nfunction insertMultiDragClones(elementsInserted, rootEl) {\n  multiDragClones.forEach(function (clone, i) {\n    var target = rootEl.children[clone.sortableIndex + (elementsInserted ? Number(i) : 0)];\n\n    if (target) {\n      rootEl.insertBefore(clone, target);\n    } else {\n      rootEl.appendChild(clone);\n    }\n  });\n}\n\nfunction removeMultiDragElements() {\n  multiDragElements.forEach(function (multiDragElement) {\n    if (multiDragElement === dragEl$1) return;\n    multiDragElement.parentNode && multiDragElement.parentNode.removeChild(multiDragElement);\n  });\n}\n\nexport default Sortable;\nexport { AutoScrollPlugin as AutoScroll, MultiDragPlugin as MultiDrag, OnSpill, Sortable, SwapPlugin as Swap };\n","<script>\r\n\r\n\timport { createEventDispatcher } from 'svelte';\r\n\tconst dispatch = createEventDispatcher();\r\n\r\n    import Sortable from 'sortablejs/modular/sortable.core.esm.js';\r\n\r\n    // every item is an object with a unique ID for identification\r\n    export let items = [];\r\n    export let idKey = \"id\"; // id attribute changeable if needed\r\n    export let ulClass = \"\";\r\n    export let liClass = \"\";\r\n    export let getItemById = undefined;\r\n    export let sortableOptions = {};\r\n    sortableOptions = Object.assign({}, sortableOptions); // prevent leak to outside\r\n    if (sortableOptions.dataIdAttr) throw new Error(\"sortableOptions.dataIdAttr is currently not supported.\");\r\n    sortableOptions.store = sortableOptions.store || {\r\n        set: sortable => undefined // placeholder\r\n    };\r\n    if (sortableOptions.group && !getItemById) {\r\n        throw new Error(\"When using group, please provide a function called `getItemById` (as a prop) that gives an item in case it gets dropped from somewhere else. Otherwise, the SortableList cannot know what the item is exactly.\");\r\n    }\r\n    getItemById = getItemById || ((id) => {\r\n        return items.find(item => item[idKey] == id); // should only loosely check as IDs are auto-converted to strings\r\n    });\r\n\r\n    let _store_set = sortableOptions.store.set;\r\n    sortableOptions.store.set = (sortable) => {\r\n        items = sortable.toArray().map(getItemById);\r\n        _store_set(sortable); // still call old set callback function\r\n        dispatch(\"orderChanged\", items);\r\n    };\r\n    \r\n    let sortable;\r\n    let listElement;\r\n    $: if(listElement && !sortable) {\r\n        sortable = Sortable.create(listElement, sortableOptions);\r\n    }\r\n\r\n    $: for (let item of items) {\r\n        if (!item || item[idKey] == null) {\r\n            throw new Error(\"Item \" + item + \" has no valid identifier \" + idKey);\r\n        }\r\n    }\r\n\r\n</script>\r\n\r\n\r\n<ul bind:this={ listElement } class={ ulClass }>\r\n    {#each items as item (item[idKey])}\r\n\r\n\t<li class={ liClass } data-id={ item[idKey] }>\r\n        <slot { item }>{ item }</slot>\r\n    </li>\r\n\r\n    {/each}\r\n</ul>\r\n","<script>\r\n\r\n    // Normally, this would be import: `import SortableList from '@palsch/svelte-sortablejs';`\r\n    import SortableList from \"../../SortableList.svelte\";\r\n\r\n    let items = [1, 2, 3, 4].map(i => ({ identifierNumber: i, text: \"item \" + i }));\r\n    let items2 = [-1, -2, -3, -4].map(i => ({ identifierNumber: i, text: i + \" ɯǝʇı \" }));\r\n    let currentNumber = 5;\r\n\r\n    const sortableOptions = {\r\n        group: \"items\", \r\n        animation: 100, \r\n        easing: \"cubic-bezier(1, 0, 0, 1)\"\r\n    };\r\n\r\n    function addItem() {\r\n        items.push({\r\n            identifierNumber: currentNumber, \r\n            text: \"item \" + currentNumber\r\n        });\r\n        currentNumber ++;\r\n        items = items; // refresh UI\r\n    }\r\n\r\n    function removeItem() {\r\n        items.pop();\r\n        items = items; // refresh UI\r\n    }\r\n\r\n    function itemOrderChanged(event) {\r\n        console.log(\"item order changed!\", event.detail);\r\n    }\r\n\r\n    function getItemById(id) {\r\n        return items.concat(items2).find(item => item.identifierNumber == id);\r\n    }\r\n\r\n</script>\r\n\r\n<h1>svelte-sortablejs example</h1>\r\n\r\n<h2>Normal</h2>\r\n\r\n<p>Try dragging them around!</p>\r\n\r\n<SortableList { sortableOptions } on:orderChanged={ itemOrderChanged } \r\n        bind:items idKey=\"identifierNumber\" let:item { getItemById }\r\n        liClass=\"largerFont\">\r\n    Hey, it's { item.text }!\r\n</SortableList>\r\n\r\n\r\n<button on:click={ addItem }>add item</button>\r\n<button on:click={ removeItem }>remove item</button>\r\n\r\n<br><br>\r\n<hr>\r\n<br><br>\r\n\r\n<h2>Multiple groups</h2>\r\n<p>Dragging between groups is supported as well. Try dragging these to the list above and vice-versa!</p>\r\n\r\n<SortableList { sortableOptions } on:orderChanged={ itemOrderChanged } \r\n        bind:items={ items2 } idKey=\"identifierNumber\" let:item { getItemById } \r\n        liClass=\"largerFont crazy\">\r\n    ¡{ item.text } s,ʇı 'ʎǝH\r\n</SortableList>\r\n\r\n<style>\r\n\r\n    /* you need to use :global so that Svelte does not optimize away the in its view \"unused\" classes\r\n       see https://github.com/sveltejs/svelte/issues/2870 */\r\n    :global(.largerFont) {\r\n        font-size: 1.5rem;\r\n    }\r\n\r\n    :global(.crazy) {\r\n        color: red;\r\n    }\r\n\r\n</style>\r\n","import App from \"./App.svelte\";\r\nconst app = new App({\r\n    target: document.body\r\n});\r\n\r\nexport default app;\r\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","get_slot_context","definition","ctx","$$scope","tar","src","k","assign","slice","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","text","data","createTextNode","space","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","current_component","set_current_component","component","createEventDispatcher","Error","get_current_component","type","detail","callbacks","$$","e","createEvent","initCustomEvent","custom_event","call","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","add_flush_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","after_update","outroing","outros","transition_in","block","local","delete","transition_out","o","c","d","outro_and_destroy_block","lookup","key","bind","index","props","undefined","bound","create_component","mount_component","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","parent_component","prop_values","context","Map","ready","ret","rest","hydrate","l","Array","from","childNodes","children","intro","SvelteComponent","[object Object]","this","$destroy","indexOf","splice","_typeof","obj","Symbol","iterator","constructor","prototype","_defineProperty","defineProperty","enumerable","configurable","writable","_extends","arguments","source","hasOwnProperty","apply","_objectSpread","ownKeys","keys","getOwnPropertySymbols","concat","sym","getOwnPropertyDescriptor","_objectWithoutProperties","excluded","sourceKeys","_objectWithoutPropertiesLoose","sourceSymbolKeys","propertyIsEnumerable","userAgent","pattern","window","navigator","match","IE11OrLess","Edge","FireFox","Safari","IOS","ChromeForAndroid","captureMode","capture","passive","on","el","off","matches","selector","substring","msMatchesSelector","webkitMatchesSelector","_","getParentOrHost","host","nodeType","closest","includeCTX","_throttleTimeout","R_SPACE","toggleClass","state","classList","className","replace","css","prop","val","style","defaultView","getComputedStyle","currentStyle","matrix","selfOnly","appliedTransforms","transform","matrixFn","DOMMatrix","WebKitCSSMatrix","CSSMatrix","MSCSSMatrix","find","tagName","list","getElementsByTagName","n","getWindowScrollingElement","scrollingElement","documentElement","getRect","relativeToContainingBlock","relativeToNonStaticParent","undoScale","container","getBoundingClientRect","elRect","top","left","bottom","right","height","width","innerHeight","innerWidth","containerRect","parseInt","elMatrix","scaleX","scaleY","isScrolledPast","elSide","parentSide","parent","getParentAutoScrollElement","elSideVal","parentSideVal","getChild","childNum","currentChild","display","Sortable","ghost","dragged","draggable","lastChild","last","lastElementChild","previousElementSibling","nodeName","toUpperCase","clone","getRelativeScrollOffset","offsetLeft","offsetTop","winScroller","scrollLeft","scrollTop","includeSelf","elem","gotSelf","clientWidth","scrollWidth","clientHeight","scrollHeight","elemCSS","overflowX","overflowY","body","isRectEqual","rect1","rect2","Math","round","Polymer","$","jQuery","Zepto","dom","cloneNode","expando","Date","getTime","AnimationStateManager","animationCallbackId","animationStates","captureAnimationState","animation","child","rect","fromRect","thisAnimationDuration","childMatrix","f","addAnimationState","removeAnimationState","arr","Number","indexOfObject","animateAll","_this","clearTimeout","animating","animationTime","time","toRect","prevFromRect","prevToRect","animatingRect","targetMatrix","sqrt","pow","calculateRealTime","animate","max","animationResetTimer","setTimeout","currentRect","duration","translateX","translateY","animatingX","animatingY","offsetWidth","repaint","easing","animated","plugins","defaults","initializeByDefault","PluginManager","mount","plugin","option","pluginEvent","eventName","sortable","evt","eventCanceled","cancel","eventNameGlobal","pluginName","initializePlugins","initialized","modified","modifyOption","getEventProperties","eventProperties","modifiedValue","optionListeners","_ref","originalEvent","dragEl","parentEl","ghostEl","rootEl","nextEl","lastDownEl","cloneEl","cloneHidden","dragStarted","moved","putSortable","activeSortable","active","oldIndex","oldDraggableIndex","newIndex","newDraggableIndex","hideGhostForTarget","_hideGhostForTarget","unhideGhostForTarget","_unhideGhostForTarget","cloneNowHidden","cloneNowShown","dispatchSortableEvent","_dispatchEvent","info","targetEl","toEl","fromEl","extraEventProperties","onName","charAt","substr","CustomEvent","initEvent","bubbles","cancelable","to","item","pullMode","lastPutMode","allEventProperties","dispatchEvent","activeGroup","tapEvt","touchEvt","lastDx","lastDy","tapDistanceLeft","tapDistanceTop","lastTarget","lastDirection","targetMoveDistance","ghostRelativeParent","awaitingDragStarted","ignoreNextClick","sortables","pastFirstInvertThresh","isCircumstantialInvert","ghostRelativeParentInitialScroll","_silent","savedInputChecked","documentExists","PositionGhostAbsolutely","CSSFloatProperty","supportDraggable","supportCssPointerEvents","cssText","pointerEvents","_detectDirection","elCSS","elWidth","paddingLeft","paddingRight","borderLeftWidth","borderRightWidth","child1","child2","firstChildCSS","secondChildCSS","firstChildWidth","marginLeft","marginRight","secondChildWidth","flexDirection","gridTemplateColumns","split","touchingSideChild2","_prepareGroup","toFn","pull","sameGroup","group","otherGroup","join","originalGroup","checkPull","checkPut","put","revertClone","preventDefault","stopPropagation","stopImmediatePropagation","nearestEmptyInsertDetectEvent","touches","nearest","x","clientX","y","clientY","some","threshold","emptyInsertThreshold","insideHorizontally","insideVertically","_onDragOver","_checkOutsideTargetEl","_isOutsideThisEl","toString","sort","disabled","store","handle","test","swapThreshold","invertSwap","invertedSwapThreshold","removeCloneOnHide","direction","ghostClass","chosenClass","dragClass","ignore","preventOnFilter","setData","dataTransfer","textContent","dropBubble","dragoverBubble","dataIdAttr","delay","delayOnTouchOnly","touchStartThreshold","devicePixelRatio","forceFallback","fallbackClass","fallbackOnBody","fallbackTolerance","fallbackOffset","supportPointer","nativeDraggable","_onTapStart","get","_onMove","dragRect","targetRect","willInsertAfter","retVal","onMoveFn","onMove","draggedRect","related","relatedRect","_disableDraggable","_unsilent","_generateId","str","href","sum","charCodeAt","_nextTick","_cancelNextTick","id","contains","_getDirection","touch","pointerType","originalTarget","shadowRoot","path","composedPath","root","inputs","idx","checked","_saveInputCheckedState","button","isContentEditable","criteria","trim","_prepareDragStart","dragStartFn","ownerDocument","nextSibling","_lastX","_lastY","_onDrop","_disableDelayedDragEvents","_triggerDragStart","_disableDelayedDrag","_delayedDragTouchMoveHandler","_dragStartTimer","abs","floor","_onTouchMove","_onDragStart","selection","empty","getSelection","removeAllRanges","err","_dragStarted","fallback","_appendGhost","_nulling","_emulateDragOver","elementFromPoint","ghostMatrix","relativeScrollOffset","dx","dy","cssMatrix","_hideClone","cloneId","_loopId","setInterval","effectAllowed","_dragStartId","revert","vertical","isOwner","canSort","fromSortable","completedFired","dragOverEvent","_ignoreWhileAnimating","completed","elLastChild","_ghostIsLast","changed","targetBeforeFirstSwap","sibling","differentLevel","differentRowCol","dragElS1Opp","dragElS2Opp","dragElOppLength","targetS1Opp","targetS2Opp","targetOppLength","_dragElInRowColumn","side1","scrolledPastTop","scrollBefore","isLastTarget","mouseOnAxis","targetLength","targetS1","targetS2","invert","_getInsertDirection","_getSwapDirection","dragIndex","nextElementSibling","after","moveVector","scrollBy","extra","axis","insertion","_showClone","_offMoveEvents","_offUpEvents","clearInterval","save","handleEvent","dropEffect","_globalDragOver","toArray","order","items","set","destroy","querySelectorAll","utils","is","extend","dst","throttle","ms","args","nextTick","cancelNextTick","detectDirection","_len","_key","version","drop","toSortable","changedTouches","onSpill","Revert","Remove","startIndex","dragStart","_ref2","_ref3","_ref4","parentSortable","slot_ctx","lets","merged","len","r","old_blocks","get_key","dynamic","create_each_block","next","get_context","old_indexes","new_blocks","new_lookup","deltas","child_ctx","will_move","did_move","first","new_block","old_block","new_key","old_key","dispatch","idKey","ulClass","liClass","getItemById","sortableOptions","listElement","_store_set","itemOrderChanged","console","log","identifierNumber","items2","currentNumber"],"mappings":"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"}